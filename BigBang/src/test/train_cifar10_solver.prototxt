mode: GPU
#93720
train_iterations: 100000
validate_iterations: 20
test_validatedata_accuracy_per_train_iterations: 1500
train_batch_size: 32
validate_batch_size: 500
#lr: 0.005
lr: 0.01
write_model_dir: "D:/deeplearning/cifar_lmdb/cifar10_model.proto"
#read_model_dir: "D:/deeplearning/cifar_lmdb/cifar10_model.proto"
momentum_ratio: 0.9
weight_decay_param: {
	method: L2REGULARIZATION,
	alpha: 0.0003
}
net_param {
	name: "train_minst"
  state: TRAIN
  layer_param {
    name: "data"
    type: "Data"
    data_layer_param {
      batch_size: 32
      cache_batch_count: 10
      source: "D:/deeplearning/cifar_lmdb/cifar10_train.mdb"
			preprocess_params: {
				scale: 0.00392156
				mean_file: "D:/deeplearning/cifar_lmdb/cifar10_mean.proto"
			}
    }
  }
  layer_param {
    name: "Conv1"
    type: "Conv"
    conv_layer_param {
      kernel_groups: 128
			kernel_channels: 3
			kernel_h: 5
			kernel_w: 5
			stride_h: 1
			stride_w: 1
      use_bias: true
      kernel_filler: {
        type: XAVIER
				std: 0.01
      }
      bias_filler: {
        type: GAUSSIAN_DISTRIBUTION
      }
    }
  }
  layer_param {
    name: "Pool1"
    type: "Pooling"
		pooling_layer_param {
			kernel_h: 2
			kernel_w: 2
			stride_h: 2
			stride_w: 2
		}
  }
	layer_param {
		name: "neuron1"
    type: "Relu"
	}
	layer_param {
    name: "Conv2"
    type: "Conv"
    conv_layer_param {
      kernel_groups: 96
			kernel_channels: 128
			kernel_h: 3
			kernel_w: 3
			stride_h: 1
			stride_w: 1
      use_bias: true
      kernel_filler: {
        type: XAVIER
				std: 0.01
      }
      bias_filler: {
        type: GAUSSIAN_DISTRIBUTION
      }
    }
  }
  layer_param {
    name: "Pool2"
    type: "Pooling"
		pooling_layer_param {
			kernel_h: 2
			kernel_w: 2
			stride_h: 2
			stride_w: 2
		}
  }
	layer_param {
		name: "neuron1"
    type: "Relu"
	}
	layer_param {
		name: "dropout1"
		type: "Dropout"
		dropout_layer_param {
			dropout_ratio: 0.5
		}
	}
  layer_param {
    name: "inner1"
    type: "InnerProduct"
    inner_product_layer_param {
      output_nums: 800
      use_bias: true
      weight_filler: {
        type: XAVIER
				std: 0.01
      }
      bias_filler: {
        type: GAUSSIAN_DISTRIBUTION
      }
    }
  }
	layer_param {
		name: "dropout1"
		type: "Dropout"
		dropout_layer_param {
			dropout_ratio: 0.5
		}
	}
  layer_param {
    name: "neuron1"
    type: "Relu"
  }
	layer_param {
    name: "inner2"
    type: "InnerProduct"
    inner_product_layer_param {
      output_nums: 10
      use_bias: true
      weight_filler: {
        type: XAVIER
				std: 0.01
      }
      bias_filler: {
        type: GAUSSIAN_DISTRIBUTION
      }
    }
  }
  layer_param {
    name: "end"
    type: "SoftmaxCost"
  }
}
net_param {
	name: "test_minst"
  state: VALIDATE
  layer_param {
    name: "data"
    type: "Data"
    data_layer_param {
      batch_size: 500
      cache_batch_count: 2
      source: "D:/deeplearning/cifar_lmdb/cifar10_test.mdb"
			preprocess_params: {
				scale: 0.00392156
				mean_file: "D:/deeplearning/cifar_lmdb/cifar10_mean.proto"
			}
    }
  }
  layer_param {
    name: "Conv1"
    type: "Conv"
    conv_layer_param {
      kernel_groups: 128
			kernel_channels: 3
			kernel_h: 5
			kernel_w: 5
			stride_h: 1
			stride_w: 1
      use_bias: true
      kernel_filler: {
        type: XAVIER
				std: 0.01
      }
      bias_filler: {
        type: GAUSSIAN_DISTRIBUTION
      }
    }
  }
  layer_param {
    name: "Pool1"
    type: "Pooling"
		pooling_layer_param {
			kernel_h: 2
			kernel_w: 2
			stride_h: 2
			stride_w: 2
		}
  }
	layer_param {
		name: "neuron1"
    type: "Relu"
	}
	layer_param {
    name: "Conv2"
    type: "Conv"
    conv_layer_param {
      kernel_groups: 96
			kernel_channels: 128
			kernel_h: 3
			kernel_w: 3
			stride_h: 1
			stride_w: 1
      use_bias: true
      kernel_filler: {
        type: XAVIER
				std: 0.01
      }
      bias_filler: {
        type: GAUSSIAN_DISTRIBUTION
      }
    }
  }
  layer_param {
    name: "Pool1"
    type: "Pooling"
		pooling_layer_param {
			kernel_h: 2
			kernel_w: 2
			stride_h: 2
			stride_w: 2
		}
  }
	layer_param {
		name: "neuron1"
    type: "Relu"
	}
	layer_param {
		name: "dropout1"
		type: "Dropout"
		dropout_layer_param {
			dropout_ratio: 0.0
		}
	}
  layer_param {
    name: "inner1"
    type: "InnerProduct"
    inner_product_layer_param {
      output_nums: 800
      use_bias: true
      weight_filler: {
        type: XAVIER
				std: 0.01
      }
      bias_filler: {
        type: GAUSSIAN_DISTRIBUTION
      }
    }
  }
  layer_param {
    name: "neuron1"
    type: "Relu"
  }
	layer_param {
		name: "dropout1"
		type: "Dropout"
		dropout_layer_param {
			dropout_ratio: 0.0
		}
	}
	layer_param {
    name: "inner2"
    type: "InnerProduct"
    inner_product_layer_param {
      output_nums: 10
      use_bias: true
      weight_filler: {
        type: XAVIER
				std: 0.01
      }
      bias_filler: {
        type: GAUSSIAN_DISTRIBUTION
      }
    }
  }
	layer_param {
    name: "LastActivation"
    type: "Softmax"
  }
	layer_param {
    name: "Cost"
    type: "LogLikelihood"
  }
}