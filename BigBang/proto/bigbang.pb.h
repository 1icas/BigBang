// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bigbang.proto

#ifndef PROTOBUF_bigbang_2eproto__INCLUDED
#define PROTOBUF_bigbang_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_bigbang_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPoolingLayerParameterImpl();
void InitDefaultsPoolingLayerParameter();
void InitDefaultsConvLayerParameterImpl();
void InitDefaultsConvLayerParameter();
void InitDefaultsInnerProductLayerParameterImpl();
void InitDefaultsInnerProductLayerParameter();
void InitDefaultsLayerParameterImpl();
void InitDefaultsLayerParameter();
void InitDefaultsNetParameterImpl();
void InitDefaultsNetParameter();
void InitDefaultsSolverParameterImpl();
void InitDefaultsSolverParameter();
inline void InitDefaults() {
  InitDefaultsPoolingLayerParameter();
  InitDefaultsConvLayerParameter();
  InitDefaultsInnerProductLayerParameter();
  InitDefaultsLayerParameter();
  InitDefaultsNetParameter();
  InitDefaultsSolverParameter();
}
}  // namespace protobuf_bigbang_2eproto
namespace BigBang {
class ConvLayerParameter;
class ConvLayerParameterDefaultTypeInternal;
extern ConvLayerParameterDefaultTypeInternal _ConvLayerParameter_default_instance_;
class InnerProductLayerParameter;
class InnerProductLayerParameterDefaultTypeInternal;
extern InnerProductLayerParameterDefaultTypeInternal _InnerProductLayerParameter_default_instance_;
class LayerParameter;
class LayerParameterDefaultTypeInternal;
extern LayerParameterDefaultTypeInternal _LayerParameter_default_instance_;
class NetParameter;
class NetParameterDefaultTypeInternal;
extern NetParameterDefaultTypeInternal _NetParameter_default_instance_;
class PoolingLayerParameter;
class PoolingLayerParameterDefaultTypeInternal;
extern PoolingLayerParameterDefaultTypeInternal _PoolingLayerParameter_default_instance_;
class SolverParameter;
class SolverParameterDefaultTypeInternal;
extern SolverParameterDefaultTypeInternal _SolverParameter_default_instance_;
}  // namespace BigBang
namespace BigBang {

enum PoolingLayerParameter_PoolingMethod {
  PoolingLayerParameter_PoolingMethod_MAX = 0,
  PoolingLayerParameter_PoolingMethod_AVERAGE = 1
};
bool PoolingLayerParameter_PoolingMethod_IsValid(int value);
const PoolingLayerParameter_PoolingMethod PoolingLayerParameter_PoolingMethod_PoolingMethod_MIN = PoolingLayerParameter_PoolingMethod_MAX;
const PoolingLayerParameter_PoolingMethod PoolingLayerParameter_PoolingMethod_PoolingMethod_MAX = PoolingLayerParameter_PoolingMethod_AVERAGE;
const int PoolingLayerParameter_PoolingMethod_PoolingMethod_ARRAYSIZE = PoolingLayerParameter_PoolingMethod_PoolingMethod_MAX + 1;

const ::google::protobuf::EnumDescriptor* PoolingLayerParameter_PoolingMethod_descriptor();
inline const ::std::string& PoolingLayerParameter_PoolingMethod_Name(PoolingLayerParameter_PoolingMethod value) {
  return ::google::protobuf::internal::NameOfEnum(
    PoolingLayerParameter_PoolingMethod_descriptor(), value);
}
inline bool PoolingLayerParameter_PoolingMethod_Parse(
    const ::std::string& name, PoolingLayerParameter_PoolingMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PoolingLayerParameter_PoolingMethod>(
    PoolingLayerParameter_PoolingMethod_descriptor(), name, value);
}
enum FillerParameter {
  GAUSSIAN_DISTRIBUTION = 0
};
bool FillerParameter_IsValid(int value);
const FillerParameter FillerParameter_MIN = GAUSSIAN_DISTRIBUTION;
const FillerParameter FillerParameter_MAX = GAUSSIAN_DISTRIBUTION;
const int FillerParameter_ARRAYSIZE = FillerParameter_MAX + 1;

const ::google::protobuf::EnumDescriptor* FillerParameter_descriptor();
inline const ::std::string& FillerParameter_Name(FillerParameter value) {
  return ::google::protobuf::internal::NameOfEnum(
    FillerParameter_descriptor(), value);
}
inline bool FillerParameter_Parse(
    const ::std::string& name, FillerParameter* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FillerParameter>(
    FillerParameter_descriptor(), name, value);
}
// ===================================================================

class PoolingLayerParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BigBang.PoolingLayerParameter) */ {
 public:
  PoolingLayerParameter();
  virtual ~PoolingLayerParameter();

  PoolingLayerParameter(const PoolingLayerParameter& from);

  inline PoolingLayerParameter& operator=(const PoolingLayerParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PoolingLayerParameter(PoolingLayerParameter&& from) noexcept
    : PoolingLayerParameter() {
    *this = ::std::move(from);
  }

  inline PoolingLayerParameter& operator=(PoolingLayerParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PoolingLayerParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PoolingLayerParameter* internal_default_instance() {
    return reinterpret_cast<const PoolingLayerParameter*>(
               &_PoolingLayerParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PoolingLayerParameter* other);
  friend void swap(PoolingLayerParameter& a, PoolingLayerParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PoolingLayerParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  PoolingLayerParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PoolingLayerParameter& from);
  void MergeFrom(const PoolingLayerParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PoolingLayerParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PoolingLayerParameter_PoolingMethod PoolingMethod;
  static const PoolingMethod MAX =
    PoolingLayerParameter_PoolingMethod_MAX;
  static const PoolingMethod AVERAGE =
    PoolingLayerParameter_PoolingMethod_AVERAGE;
  static inline bool PoolingMethod_IsValid(int value) {
    return PoolingLayerParameter_PoolingMethod_IsValid(value);
  }
  static const PoolingMethod PoolingMethod_MIN =
    PoolingLayerParameter_PoolingMethod_PoolingMethod_MIN;
  static const PoolingMethod PoolingMethod_MAX =
    PoolingLayerParameter_PoolingMethod_PoolingMethod_MAX;
  static const int PoolingMethod_ARRAYSIZE =
    PoolingLayerParameter_PoolingMethod_PoolingMethod_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PoolingMethod_descriptor() {
    return PoolingLayerParameter_PoolingMethod_descriptor();
  }
  static inline const ::std::string& PoolingMethod_Name(PoolingMethod value) {
    return PoolingLayerParameter_PoolingMethod_Name(value);
  }
  static inline bool PoolingMethod_Parse(const ::std::string& name,
      PoolingMethod* value) {
    return PoolingLayerParameter_PoolingMethod_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BigBang.PoolingLayerParameter.PoolingMethod pool_ = 1 [default = MAX];
  bool has_pool_() const;
  void clear_pool_();
  static const int kPoolFieldNumber = 1;
  ::BigBang::PoolingLayerParameter_PoolingMethod pool_() const;
  void set_pool_(::BigBang::PoolingLayerParameter_PoolingMethod value);

  // optional uint32 kernel_h_ = 2 [default = 1];
  bool has_kernel_h_() const;
  void clear_kernel_h_();
  static const int kKernelHFieldNumber = 2;
  ::google::protobuf::uint32 kernel_h_() const;
  void set_kernel_h_(::google::protobuf::uint32 value);

  // optional uint32 kernel_w_ = 3 [default = 1];
  bool has_kernel_w_() const;
  void clear_kernel_w_();
  static const int kKernelWFieldNumber = 3;
  ::google::protobuf::uint32 kernel_w_() const;
  void set_kernel_w_(::google::protobuf::uint32 value);

  // optional uint32 stride_h_ = 4 [default = 1];
  bool has_stride_h_() const;
  void clear_stride_h_();
  static const int kStrideHFieldNumber = 4;
  ::google::protobuf::uint32 stride_h_() const;
  void set_stride_h_(::google::protobuf::uint32 value);

  // optional uint32 stride_w_ = 5 [default = 1];
  bool has_stride_w_() const;
  void clear_stride_w_();
  static const int kStrideWFieldNumber = 5;
  ::google::protobuf::uint32 stride_w_() const;
  void set_stride_w_(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BigBang.PoolingLayerParameter)
 private:
  void set_has_pool_();
  void clear_has_pool_();
  void set_has_kernel_h_();
  void clear_has_kernel_h_();
  void set_has_kernel_w_();
  void clear_has_kernel_w_();
  void set_has_stride_h_();
  void clear_has_stride_h_();
  void set_has_stride_w_();
  void clear_has_stride_w_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int pool__;
  ::google::protobuf::uint32 kernel_h__;
  ::google::protobuf::uint32 kernel_w__;
  ::google::protobuf::uint32 stride_h__;
  ::google::protobuf::uint32 stride_w__;
  friend struct ::protobuf_bigbang_2eproto::TableStruct;
  friend void ::protobuf_bigbang_2eproto::InitDefaultsPoolingLayerParameterImpl();
};
// -------------------------------------------------------------------

class ConvLayerParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BigBang.ConvLayerParameter) */ {
 public:
  ConvLayerParameter();
  virtual ~ConvLayerParameter();

  ConvLayerParameter(const ConvLayerParameter& from);

  inline ConvLayerParameter& operator=(const ConvLayerParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConvLayerParameter(ConvLayerParameter&& from) noexcept
    : ConvLayerParameter() {
    *this = ::std::move(from);
  }

  inline ConvLayerParameter& operator=(ConvLayerParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConvLayerParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConvLayerParameter* internal_default_instance() {
    return reinterpret_cast<const ConvLayerParameter*>(
               &_ConvLayerParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ConvLayerParameter* other);
  friend void swap(ConvLayerParameter& a, ConvLayerParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConvLayerParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  ConvLayerParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConvLayerParameter& from);
  void MergeFrom(const ConvLayerParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConvLayerParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pad_h_ = 5;
  bool has_pad_h_() const;
  void clear_pad_h_();
  static const int kPadHFieldNumber = 5;
  ::google::protobuf::uint32 pad_h_() const;
  void set_pad_h_(::google::protobuf::uint32 value);

  // optional uint32 pad_w_ = 6;
  bool has_pad_w_() const;
  void clear_pad_w_();
  static const int kPadWFieldNumber = 6;
  ::google::protobuf::uint32 pad_w_() const;
  void set_pad_w_(::google::protobuf::uint32 value);

  // optional bool use_bias_ = 9;
  bool has_use_bias_() const;
  void clear_use_bias_();
  static const int kUseBiasFieldNumber = 9;
  bool use_bias_() const;
  void set_use_bias_(bool value);

  // optional .BigBang.FillerParameter weight_filler_ = 10 [default = GAUSSIAN_DISTRIBUTION];
  bool has_weight_filler_() const;
  void clear_weight_filler_();
  static const int kWeightFillerFieldNumber = 10;
  ::BigBang::FillerParameter weight_filler_() const;
  void set_weight_filler_(::BigBang::FillerParameter value);

  // optional .BigBang.FillerParameter bias_filler_ = 11 [default = GAUSSIAN_DISTRIBUTION];
  bool has_bias_filler_() const;
  void clear_bias_filler_();
  static const int kBiasFillerFieldNumber = 11;
  ::BigBang::FillerParameter bias_filler_() const;
  void set_bias_filler_(::BigBang::FillerParameter value);

  // optional uint32 kernel_groups_ = 1 [default = 1];
  bool has_kernel_groups_() const;
  void clear_kernel_groups_();
  static const int kKernelGroupsFieldNumber = 1;
  ::google::protobuf::uint32 kernel_groups_() const;
  void set_kernel_groups_(::google::protobuf::uint32 value);

  // optional uint32 kernel_channels_ = 2 [default = 1];
  bool has_kernel_channels_() const;
  void clear_kernel_channels_();
  static const int kKernelChannelsFieldNumber = 2;
  ::google::protobuf::uint32 kernel_channels_() const;
  void set_kernel_channels_(::google::protobuf::uint32 value);

  // optional uint32 kernel_h_ = 3 [default = 1];
  bool has_kernel_h_() const;
  void clear_kernel_h_();
  static const int kKernelHFieldNumber = 3;
  ::google::protobuf::uint32 kernel_h_() const;
  void set_kernel_h_(::google::protobuf::uint32 value);

  // optional uint32 kernel_w_ = 4 [default = 1];
  bool has_kernel_w_() const;
  void clear_kernel_w_();
  static const int kKernelWFieldNumber = 4;
  ::google::protobuf::uint32 kernel_w_() const;
  void set_kernel_w_(::google::protobuf::uint32 value);

  // optional uint32 stride_h_ = 7 [default = 1];
  bool has_stride_h_() const;
  void clear_stride_h_();
  static const int kStrideHFieldNumber = 7;
  ::google::protobuf::uint32 stride_h_() const;
  void set_stride_h_(::google::protobuf::uint32 value);

  // optional uint32 stride_w_ = 8 [default = 1];
  bool has_stride_w_() const;
  void clear_stride_w_();
  static const int kStrideWFieldNumber = 8;
  ::google::protobuf::uint32 stride_w_() const;
  void set_stride_w_(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BigBang.ConvLayerParameter)
 private:
  void set_has_kernel_groups_();
  void clear_has_kernel_groups_();
  void set_has_kernel_channels_();
  void clear_has_kernel_channels_();
  void set_has_kernel_h_();
  void clear_has_kernel_h_();
  void set_has_kernel_w_();
  void clear_has_kernel_w_();
  void set_has_pad_h_();
  void clear_has_pad_h_();
  void set_has_pad_w_();
  void clear_has_pad_w_();
  void set_has_stride_h_();
  void clear_has_stride_h_();
  void set_has_stride_w_();
  void clear_has_stride_w_();
  void set_has_use_bias_();
  void clear_has_use_bias_();
  void set_has_weight_filler_();
  void clear_has_weight_filler_();
  void set_has_bias_filler_();
  void clear_has_bias_filler_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 pad_h__;
  ::google::protobuf::uint32 pad_w__;
  bool use_bias__;
  int weight_filler__;
  int bias_filler__;
  ::google::protobuf::uint32 kernel_groups__;
  ::google::protobuf::uint32 kernel_channels__;
  ::google::protobuf::uint32 kernel_h__;
  ::google::protobuf::uint32 kernel_w__;
  ::google::protobuf::uint32 stride_h__;
  ::google::protobuf::uint32 stride_w__;
  friend struct ::protobuf_bigbang_2eproto::TableStruct;
  friend void ::protobuf_bigbang_2eproto::InitDefaultsConvLayerParameterImpl();
};
// -------------------------------------------------------------------

class InnerProductLayerParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BigBang.InnerProductLayerParameter) */ {
 public:
  InnerProductLayerParameter();
  virtual ~InnerProductLayerParameter();

  InnerProductLayerParameter(const InnerProductLayerParameter& from);

  inline InnerProductLayerParameter& operator=(const InnerProductLayerParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InnerProductLayerParameter(InnerProductLayerParameter&& from) noexcept
    : InnerProductLayerParameter() {
    *this = ::std::move(from);
  }

  inline InnerProductLayerParameter& operator=(InnerProductLayerParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InnerProductLayerParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InnerProductLayerParameter* internal_default_instance() {
    return reinterpret_cast<const InnerProductLayerParameter*>(
               &_InnerProductLayerParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(InnerProductLayerParameter* other);
  friend void swap(InnerProductLayerParameter& a, InnerProductLayerParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InnerProductLayerParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  InnerProductLayerParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InnerProductLayerParameter& from);
  void MergeFrom(const InnerProductLayerParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InnerProductLayerParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .BigBang.FillerParameter bias_filler_ = 11 [default = GAUSSIAN_DISTRIBUTION];
  bool has_bias_filler_() const;
  void clear_bias_filler_();
  static const int kBiasFillerFieldNumber = 11;
  ::BigBang::FillerParameter bias_filler_() const;
  void set_bias_filler_(::BigBang::FillerParameter value);

  // optional bool use_bias_ = 1;
  bool has_use_bias_() const;
  void clear_use_bias_();
  static const int kUseBiasFieldNumber = 1;
  bool use_bias_() const;
  void set_use_bias_(bool value);

  // optional .BigBang.FillerParameter weight_filler_ = 10 [default = GAUSSIAN_DISTRIBUTION];
  bool has_weight_filler_() const;
  void clear_weight_filler_();
  static const int kWeightFillerFieldNumber = 10;
  ::BigBang::FillerParameter weight_filler_() const;
  void set_weight_filler_(::BigBang::FillerParameter value);

  // @@protoc_insertion_point(class_scope:BigBang.InnerProductLayerParameter)
 private:
  void set_has_use_bias_();
  void clear_has_use_bias_();
  void set_has_weight_filler_();
  void clear_has_weight_filler_();
  void set_has_bias_filler_();
  void clear_has_bias_filler_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int bias_filler__;
  bool use_bias__;
  int weight_filler__;
  friend struct ::protobuf_bigbang_2eproto::TableStruct;
  friend void ::protobuf_bigbang_2eproto::InitDefaultsInnerProductLayerParameterImpl();
};
// -------------------------------------------------------------------

class LayerParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BigBang.LayerParameter) */ {
 public:
  LayerParameter();
  virtual ~LayerParameter();

  LayerParameter(const LayerParameter& from);

  inline LayerParameter& operator=(const LayerParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LayerParameter(LayerParameter&& from) noexcept
    : LayerParameter() {
    *this = ::std::move(from);
  }

  inline LayerParameter& operator=(LayerParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LayerParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LayerParameter* internal_default_instance() {
    return reinterpret_cast<const LayerParameter*>(
               &_LayerParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LayerParameter* other);
  friend void swap(LayerParameter& a, LayerParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LayerParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  LayerParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LayerParameter& from);
  void MergeFrom(const LayerParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LayerParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name_ = 1;
  bool has_name_() const;
  void clear_name_();
  static const int kNameFieldNumber = 1;
  const ::std::string& name_() const;
  void set_name_(const ::std::string& value);
  #if LANG_CXX11
  void set_name_(::std::string&& value);
  #endif
  void set_name_(const char* value);
  void set_name_(const char* value, size_t size);
  ::std::string* mutable_name_();
  ::std::string* release_name_();
  void set_allocated_name_(::std::string* name_);

  // optional string type_ = 2;
  bool has_type_() const;
  void clear_type_();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  #if LANG_CXX11
  void set_type_(::std::string&& value);
  #endif
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional .BigBang.ConvLayerParameter conv_layer_param_ = 100;
  bool has_conv_layer_param_() const;
  void clear_conv_layer_param_();
  static const int kConvLayerParamFieldNumber = 100;
  const ::BigBang::ConvLayerParameter& conv_layer_param_() const;
  ::BigBang::ConvLayerParameter* release_conv_layer_param_();
  ::BigBang::ConvLayerParameter* mutable_conv_layer_param_();
  void set_allocated_conv_layer_param_(::BigBang::ConvLayerParameter* conv_layer_param_);

  // optional .BigBang.InnerProductLayerParameter inner_product_layer_param_ = 101;
  bool has_inner_product_layer_param_() const;
  void clear_inner_product_layer_param_();
  static const int kInnerProductLayerParamFieldNumber = 101;
  const ::BigBang::InnerProductLayerParameter& inner_product_layer_param_() const;
  ::BigBang::InnerProductLayerParameter* release_inner_product_layer_param_();
  ::BigBang::InnerProductLayerParameter* mutable_inner_product_layer_param_();
  void set_allocated_inner_product_layer_param_(::BigBang::InnerProductLayerParameter* inner_product_layer_param_);

  // optional .BigBang.PoolingLayerParameter pooling_layer_param_ = 102;
  bool has_pooling_layer_param_() const;
  void clear_pooling_layer_param_();
  static const int kPoolingLayerParamFieldNumber = 102;
  const ::BigBang::PoolingLayerParameter& pooling_layer_param_() const;
  ::BigBang::PoolingLayerParameter* release_pooling_layer_param_();
  ::BigBang::PoolingLayerParameter* mutable_pooling_layer_param_();
  void set_allocated_pooling_layer_param_(::BigBang::PoolingLayerParameter* pooling_layer_param_);

  // @@protoc_insertion_point(class_scope:BigBang.LayerParameter)
 private:
  void set_has_name_();
  void clear_has_name_();
  void set_has_type_();
  void clear_has_type_();
  void set_has_conv_layer_param_();
  void clear_has_conv_layer_param_();
  void set_has_inner_product_layer_param_();
  void clear_has_inner_product_layer_param_();
  void set_has_pooling_layer_param_();
  void clear_has_pooling_layer_param_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name__;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::BigBang::ConvLayerParameter* conv_layer_param__;
  ::BigBang::InnerProductLayerParameter* inner_product_layer_param__;
  ::BigBang::PoolingLayerParameter* pooling_layer_param__;
  friend struct ::protobuf_bigbang_2eproto::TableStruct;
  friend void ::protobuf_bigbang_2eproto::InitDefaultsLayerParameterImpl();
};
// -------------------------------------------------------------------

class NetParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BigBang.NetParameter) */ {
 public:
  NetParameter();
  virtual ~NetParameter();

  NetParameter(const NetParameter& from);

  inline NetParameter& operator=(const NetParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NetParameter(NetParameter&& from) noexcept
    : NetParameter() {
    *this = ::std::move(from);
  }

  inline NetParameter& operator=(NetParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetParameter* internal_default_instance() {
    return reinterpret_cast<const NetParameter*>(
               &_NetParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(NetParameter* other);
  friend void swap(NetParameter& a, NetParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NetParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  NetParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NetParameter& from);
  void MergeFrom(const NetParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NetParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BigBang.LayerParameter layer_param_ = 10;
  int layer_param__size() const;
  void clear_layer_param_();
  static const int kLayerParamFieldNumber = 10;
  const ::BigBang::LayerParameter& layer_param_(int index) const;
  ::BigBang::LayerParameter* mutable_layer_param_(int index);
  ::BigBang::LayerParameter* add_layer_param_();
  ::google::protobuf::RepeatedPtrField< ::BigBang::LayerParameter >*
      mutable_layer_param_();
  const ::google::protobuf::RepeatedPtrField< ::BigBang::LayerParameter >&
      layer_param_() const;

  // optional string name_ = 1;
  bool has_name_() const;
  void clear_name_();
  static const int kNameFieldNumber = 1;
  const ::std::string& name_() const;
  void set_name_(const ::std::string& value);
  #if LANG_CXX11
  void set_name_(::std::string&& value);
  #endif
  void set_name_(const char* value);
  void set_name_(const char* value, size_t size);
  ::std::string* mutable_name_();
  ::std::string* release_name_();
  void set_allocated_name_(::std::string* name_);

  // @@protoc_insertion_point(class_scope:BigBang.NetParameter)
 private:
  void set_has_name_();
  void clear_has_name_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BigBang::LayerParameter > layer_param__;
  ::google::protobuf::internal::ArenaStringPtr name__;
  friend struct ::protobuf_bigbang_2eproto::TableStruct;
  friend void ::protobuf_bigbang_2eproto::InitDefaultsNetParameterImpl();
};
// -------------------------------------------------------------------

class SolverParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BigBang.SolverParameter) */ {
 public:
  SolverParameter();
  virtual ~SolverParameter();

  SolverParameter(const SolverParameter& from);

  inline SolverParameter& operator=(const SolverParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SolverParameter(SolverParameter&& from) noexcept
    : SolverParameter() {
    *this = ::std::move(from);
  }

  inline SolverParameter& operator=(SolverParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SolverParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SolverParameter* internal_default_instance() {
    return reinterpret_cast<const SolverParameter*>(
               &_SolverParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SolverParameter* other);
  friend void swap(SolverParameter& a, SolverParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SolverParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  SolverParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SolverParameter& from);
  void MergeFrom(const SolverParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SolverParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .BigBang.NetParameter net_param_ = 1;
  bool has_net_param_() const;
  void clear_net_param_();
  static const int kNetParamFieldNumber = 1;
  const ::BigBang::NetParameter& net_param_() const;
  ::BigBang::NetParameter* release_net_param_();
  ::BigBang::NetParameter* mutable_net_param_();
  void set_allocated_net_param_(::BigBang::NetParameter* net_param_);

  // optional float lr = 2;
  bool has_lr() const;
  void clear_lr();
  static const int kLrFieldNumber = 2;
  float lr() const;
  void set_lr(float value);

  // @@protoc_insertion_point(class_scope:BigBang.SolverParameter)
 private:
  void set_has_net_param_();
  void clear_has_net_param_();
  void set_has_lr();
  void clear_has_lr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::BigBang::NetParameter* net_param__;
  float lr_;
  friend struct ::protobuf_bigbang_2eproto::TableStruct;
  friend void ::protobuf_bigbang_2eproto::InitDefaultsSolverParameterImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PoolingLayerParameter

// optional .BigBang.PoolingLayerParameter.PoolingMethod pool_ = 1 [default = MAX];
inline bool PoolingLayerParameter::has_pool_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PoolingLayerParameter::set_has_pool_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PoolingLayerParameter::clear_has_pool_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PoolingLayerParameter::clear_pool_() {
  pool__ = 0;
  clear_has_pool_();
}
inline ::BigBang::PoolingLayerParameter_PoolingMethod PoolingLayerParameter::pool_() const {
  // @@protoc_insertion_point(field_get:BigBang.PoolingLayerParameter.pool_)
  return static_cast< ::BigBang::PoolingLayerParameter_PoolingMethod >(pool__);
}
inline void PoolingLayerParameter::set_pool_(::BigBang::PoolingLayerParameter_PoolingMethod value) {
  assert(::BigBang::PoolingLayerParameter_PoolingMethod_IsValid(value));
  set_has_pool_();
  pool__ = value;
  // @@protoc_insertion_point(field_set:BigBang.PoolingLayerParameter.pool_)
}

// optional uint32 kernel_h_ = 2 [default = 1];
inline bool PoolingLayerParameter::has_kernel_h_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PoolingLayerParameter::set_has_kernel_h_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PoolingLayerParameter::clear_has_kernel_h_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PoolingLayerParameter::clear_kernel_h_() {
  kernel_h__ = 1u;
  clear_has_kernel_h_();
}
inline ::google::protobuf::uint32 PoolingLayerParameter::kernel_h_() const {
  // @@protoc_insertion_point(field_get:BigBang.PoolingLayerParameter.kernel_h_)
  return kernel_h__;
}
inline void PoolingLayerParameter::set_kernel_h_(::google::protobuf::uint32 value) {
  set_has_kernel_h_();
  kernel_h__ = value;
  // @@protoc_insertion_point(field_set:BigBang.PoolingLayerParameter.kernel_h_)
}

// optional uint32 kernel_w_ = 3 [default = 1];
inline bool PoolingLayerParameter::has_kernel_w_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PoolingLayerParameter::set_has_kernel_w_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PoolingLayerParameter::clear_has_kernel_w_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PoolingLayerParameter::clear_kernel_w_() {
  kernel_w__ = 1u;
  clear_has_kernel_w_();
}
inline ::google::protobuf::uint32 PoolingLayerParameter::kernel_w_() const {
  // @@protoc_insertion_point(field_get:BigBang.PoolingLayerParameter.kernel_w_)
  return kernel_w__;
}
inline void PoolingLayerParameter::set_kernel_w_(::google::protobuf::uint32 value) {
  set_has_kernel_w_();
  kernel_w__ = value;
  // @@protoc_insertion_point(field_set:BigBang.PoolingLayerParameter.kernel_w_)
}

// optional uint32 stride_h_ = 4 [default = 1];
inline bool PoolingLayerParameter::has_stride_h_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PoolingLayerParameter::set_has_stride_h_() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PoolingLayerParameter::clear_has_stride_h_() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PoolingLayerParameter::clear_stride_h_() {
  stride_h__ = 1u;
  clear_has_stride_h_();
}
inline ::google::protobuf::uint32 PoolingLayerParameter::stride_h_() const {
  // @@protoc_insertion_point(field_get:BigBang.PoolingLayerParameter.stride_h_)
  return stride_h__;
}
inline void PoolingLayerParameter::set_stride_h_(::google::protobuf::uint32 value) {
  set_has_stride_h_();
  stride_h__ = value;
  // @@protoc_insertion_point(field_set:BigBang.PoolingLayerParameter.stride_h_)
}

// optional uint32 stride_w_ = 5 [default = 1];
inline bool PoolingLayerParameter::has_stride_w_() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PoolingLayerParameter::set_has_stride_w_() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PoolingLayerParameter::clear_has_stride_w_() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PoolingLayerParameter::clear_stride_w_() {
  stride_w__ = 1u;
  clear_has_stride_w_();
}
inline ::google::protobuf::uint32 PoolingLayerParameter::stride_w_() const {
  // @@protoc_insertion_point(field_get:BigBang.PoolingLayerParameter.stride_w_)
  return stride_w__;
}
inline void PoolingLayerParameter::set_stride_w_(::google::protobuf::uint32 value) {
  set_has_stride_w_();
  stride_w__ = value;
  // @@protoc_insertion_point(field_set:BigBang.PoolingLayerParameter.stride_w_)
}

// -------------------------------------------------------------------

// ConvLayerParameter

// optional uint32 kernel_groups_ = 1 [default = 1];
inline bool ConvLayerParameter::has_kernel_groups_() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConvLayerParameter::set_has_kernel_groups_() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConvLayerParameter::clear_has_kernel_groups_() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConvLayerParameter::clear_kernel_groups_() {
  kernel_groups__ = 1u;
  clear_has_kernel_groups_();
}
inline ::google::protobuf::uint32 ConvLayerParameter::kernel_groups_() const {
  // @@protoc_insertion_point(field_get:BigBang.ConvLayerParameter.kernel_groups_)
  return kernel_groups__;
}
inline void ConvLayerParameter::set_kernel_groups_(::google::protobuf::uint32 value) {
  set_has_kernel_groups_();
  kernel_groups__ = value;
  // @@protoc_insertion_point(field_set:BigBang.ConvLayerParameter.kernel_groups_)
}

// optional uint32 kernel_channels_ = 2 [default = 1];
inline bool ConvLayerParameter::has_kernel_channels_() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConvLayerParameter::set_has_kernel_channels_() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConvLayerParameter::clear_has_kernel_channels_() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConvLayerParameter::clear_kernel_channels_() {
  kernel_channels__ = 1u;
  clear_has_kernel_channels_();
}
inline ::google::protobuf::uint32 ConvLayerParameter::kernel_channels_() const {
  // @@protoc_insertion_point(field_get:BigBang.ConvLayerParameter.kernel_channels_)
  return kernel_channels__;
}
inline void ConvLayerParameter::set_kernel_channels_(::google::protobuf::uint32 value) {
  set_has_kernel_channels_();
  kernel_channels__ = value;
  // @@protoc_insertion_point(field_set:BigBang.ConvLayerParameter.kernel_channels_)
}

// optional uint32 kernel_h_ = 3 [default = 1];
inline bool ConvLayerParameter::has_kernel_h_() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConvLayerParameter::set_has_kernel_h_() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConvLayerParameter::clear_has_kernel_h_() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConvLayerParameter::clear_kernel_h_() {
  kernel_h__ = 1u;
  clear_has_kernel_h_();
}
inline ::google::protobuf::uint32 ConvLayerParameter::kernel_h_() const {
  // @@protoc_insertion_point(field_get:BigBang.ConvLayerParameter.kernel_h_)
  return kernel_h__;
}
inline void ConvLayerParameter::set_kernel_h_(::google::protobuf::uint32 value) {
  set_has_kernel_h_();
  kernel_h__ = value;
  // @@protoc_insertion_point(field_set:BigBang.ConvLayerParameter.kernel_h_)
}

// optional uint32 kernel_w_ = 4 [default = 1];
inline bool ConvLayerParameter::has_kernel_w_() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConvLayerParameter::set_has_kernel_w_() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConvLayerParameter::clear_has_kernel_w_() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConvLayerParameter::clear_kernel_w_() {
  kernel_w__ = 1u;
  clear_has_kernel_w_();
}
inline ::google::protobuf::uint32 ConvLayerParameter::kernel_w_() const {
  // @@protoc_insertion_point(field_get:BigBang.ConvLayerParameter.kernel_w_)
  return kernel_w__;
}
inline void ConvLayerParameter::set_kernel_w_(::google::protobuf::uint32 value) {
  set_has_kernel_w_();
  kernel_w__ = value;
  // @@protoc_insertion_point(field_set:BigBang.ConvLayerParameter.kernel_w_)
}

// optional uint32 pad_h_ = 5;
inline bool ConvLayerParameter::has_pad_h_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConvLayerParameter::set_has_pad_h_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConvLayerParameter::clear_has_pad_h_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConvLayerParameter::clear_pad_h_() {
  pad_h__ = 0u;
  clear_has_pad_h_();
}
inline ::google::protobuf::uint32 ConvLayerParameter::pad_h_() const {
  // @@protoc_insertion_point(field_get:BigBang.ConvLayerParameter.pad_h_)
  return pad_h__;
}
inline void ConvLayerParameter::set_pad_h_(::google::protobuf::uint32 value) {
  set_has_pad_h_();
  pad_h__ = value;
  // @@protoc_insertion_point(field_set:BigBang.ConvLayerParameter.pad_h_)
}

// optional uint32 pad_w_ = 6;
inline bool ConvLayerParameter::has_pad_w_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConvLayerParameter::set_has_pad_w_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConvLayerParameter::clear_has_pad_w_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConvLayerParameter::clear_pad_w_() {
  pad_w__ = 0u;
  clear_has_pad_w_();
}
inline ::google::protobuf::uint32 ConvLayerParameter::pad_w_() const {
  // @@protoc_insertion_point(field_get:BigBang.ConvLayerParameter.pad_w_)
  return pad_w__;
}
inline void ConvLayerParameter::set_pad_w_(::google::protobuf::uint32 value) {
  set_has_pad_w_();
  pad_w__ = value;
  // @@protoc_insertion_point(field_set:BigBang.ConvLayerParameter.pad_w_)
}

// optional uint32 stride_h_ = 7 [default = 1];
inline bool ConvLayerParameter::has_stride_h_() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConvLayerParameter::set_has_stride_h_() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ConvLayerParameter::clear_has_stride_h_() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ConvLayerParameter::clear_stride_h_() {
  stride_h__ = 1u;
  clear_has_stride_h_();
}
inline ::google::protobuf::uint32 ConvLayerParameter::stride_h_() const {
  // @@protoc_insertion_point(field_get:BigBang.ConvLayerParameter.stride_h_)
  return stride_h__;
}
inline void ConvLayerParameter::set_stride_h_(::google::protobuf::uint32 value) {
  set_has_stride_h_();
  stride_h__ = value;
  // @@protoc_insertion_point(field_set:BigBang.ConvLayerParameter.stride_h_)
}

// optional uint32 stride_w_ = 8 [default = 1];
inline bool ConvLayerParameter::has_stride_w_() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConvLayerParameter::set_has_stride_w_() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ConvLayerParameter::clear_has_stride_w_() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ConvLayerParameter::clear_stride_w_() {
  stride_w__ = 1u;
  clear_has_stride_w_();
}
inline ::google::protobuf::uint32 ConvLayerParameter::stride_w_() const {
  // @@protoc_insertion_point(field_get:BigBang.ConvLayerParameter.stride_w_)
  return stride_w__;
}
inline void ConvLayerParameter::set_stride_w_(::google::protobuf::uint32 value) {
  set_has_stride_w_();
  stride_w__ = value;
  // @@protoc_insertion_point(field_set:BigBang.ConvLayerParameter.stride_w_)
}

// optional bool use_bias_ = 9;
inline bool ConvLayerParameter::has_use_bias_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConvLayerParameter::set_has_use_bias_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConvLayerParameter::clear_has_use_bias_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConvLayerParameter::clear_use_bias_() {
  use_bias__ = false;
  clear_has_use_bias_();
}
inline bool ConvLayerParameter::use_bias_() const {
  // @@protoc_insertion_point(field_get:BigBang.ConvLayerParameter.use_bias_)
  return use_bias__;
}
inline void ConvLayerParameter::set_use_bias_(bool value) {
  set_has_use_bias_();
  use_bias__ = value;
  // @@protoc_insertion_point(field_set:BigBang.ConvLayerParameter.use_bias_)
}

// optional .BigBang.FillerParameter weight_filler_ = 10 [default = GAUSSIAN_DISTRIBUTION];
inline bool ConvLayerParameter::has_weight_filler_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConvLayerParameter::set_has_weight_filler_() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConvLayerParameter::clear_has_weight_filler_() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConvLayerParameter::clear_weight_filler_() {
  weight_filler__ = 0;
  clear_has_weight_filler_();
}
inline ::BigBang::FillerParameter ConvLayerParameter::weight_filler_() const {
  // @@protoc_insertion_point(field_get:BigBang.ConvLayerParameter.weight_filler_)
  return static_cast< ::BigBang::FillerParameter >(weight_filler__);
}
inline void ConvLayerParameter::set_weight_filler_(::BigBang::FillerParameter value) {
  assert(::BigBang::FillerParameter_IsValid(value));
  set_has_weight_filler_();
  weight_filler__ = value;
  // @@protoc_insertion_point(field_set:BigBang.ConvLayerParameter.weight_filler_)
}

// optional .BigBang.FillerParameter bias_filler_ = 11 [default = GAUSSIAN_DISTRIBUTION];
inline bool ConvLayerParameter::has_bias_filler_() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConvLayerParameter::set_has_bias_filler_() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConvLayerParameter::clear_has_bias_filler_() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConvLayerParameter::clear_bias_filler_() {
  bias_filler__ = 0;
  clear_has_bias_filler_();
}
inline ::BigBang::FillerParameter ConvLayerParameter::bias_filler_() const {
  // @@protoc_insertion_point(field_get:BigBang.ConvLayerParameter.bias_filler_)
  return static_cast< ::BigBang::FillerParameter >(bias_filler__);
}
inline void ConvLayerParameter::set_bias_filler_(::BigBang::FillerParameter value) {
  assert(::BigBang::FillerParameter_IsValid(value));
  set_has_bias_filler_();
  bias_filler__ = value;
  // @@protoc_insertion_point(field_set:BigBang.ConvLayerParameter.bias_filler_)
}

// -------------------------------------------------------------------

// InnerProductLayerParameter

// optional bool use_bias_ = 1;
inline bool InnerProductLayerParameter::has_use_bias_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InnerProductLayerParameter::set_has_use_bias_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InnerProductLayerParameter::clear_has_use_bias_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InnerProductLayerParameter::clear_use_bias_() {
  use_bias__ = false;
  clear_has_use_bias_();
}
inline bool InnerProductLayerParameter::use_bias_() const {
  // @@protoc_insertion_point(field_get:BigBang.InnerProductLayerParameter.use_bias_)
  return use_bias__;
}
inline void InnerProductLayerParameter::set_use_bias_(bool value) {
  set_has_use_bias_();
  use_bias__ = value;
  // @@protoc_insertion_point(field_set:BigBang.InnerProductLayerParameter.use_bias_)
}

// optional .BigBang.FillerParameter weight_filler_ = 10 [default = GAUSSIAN_DISTRIBUTION];
inline bool InnerProductLayerParameter::has_weight_filler_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InnerProductLayerParameter::set_has_weight_filler_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InnerProductLayerParameter::clear_has_weight_filler_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InnerProductLayerParameter::clear_weight_filler_() {
  weight_filler__ = 0;
  clear_has_weight_filler_();
}
inline ::BigBang::FillerParameter InnerProductLayerParameter::weight_filler_() const {
  // @@protoc_insertion_point(field_get:BigBang.InnerProductLayerParameter.weight_filler_)
  return static_cast< ::BigBang::FillerParameter >(weight_filler__);
}
inline void InnerProductLayerParameter::set_weight_filler_(::BigBang::FillerParameter value) {
  assert(::BigBang::FillerParameter_IsValid(value));
  set_has_weight_filler_();
  weight_filler__ = value;
  // @@protoc_insertion_point(field_set:BigBang.InnerProductLayerParameter.weight_filler_)
}

// optional .BigBang.FillerParameter bias_filler_ = 11 [default = GAUSSIAN_DISTRIBUTION];
inline bool InnerProductLayerParameter::has_bias_filler_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InnerProductLayerParameter::set_has_bias_filler_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InnerProductLayerParameter::clear_has_bias_filler_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InnerProductLayerParameter::clear_bias_filler_() {
  bias_filler__ = 0;
  clear_has_bias_filler_();
}
inline ::BigBang::FillerParameter InnerProductLayerParameter::bias_filler_() const {
  // @@protoc_insertion_point(field_get:BigBang.InnerProductLayerParameter.bias_filler_)
  return static_cast< ::BigBang::FillerParameter >(bias_filler__);
}
inline void InnerProductLayerParameter::set_bias_filler_(::BigBang::FillerParameter value) {
  assert(::BigBang::FillerParameter_IsValid(value));
  set_has_bias_filler_();
  bias_filler__ = value;
  // @@protoc_insertion_point(field_set:BigBang.InnerProductLayerParameter.bias_filler_)
}

// -------------------------------------------------------------------

// LayerParameter

// optional string name_ = 1;
inline bool LayerParameter::has_name_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LayerParameter::set_has_name_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LayerParameter::clear_has_name_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LayerParameter::clear_name_() {
  name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name_();
}
inline const ::std::string& LayerParameter::name_() const {
  // @@protoc_insertion_point(field_get:BigBang.LayerParameter.name_)
  return name__.GetNoArena();
}
inline void LayerParameter::set_name_(const ::std::string& value) {
  set_has_name_();
  name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BigBang.LayerParameter.name_)
}
#if LANG_CXX11
inline void LayerParameter::set_name_(::std::string&& value) {
  set_has_name_();
  name__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BigBang.LayerParameter.name_)
}
#endif
inline void LayerParameter::set_name_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name_();
  name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BigBang.LayerParameter.name_)
}
inline void LayerParameter::set_name_(const char* value, size_t size) {
  set_has_name_();
  name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BigBang.LayerParameter.name_)
}
inline ::std::string* LayerParameter::mutable_name_() {
  set_has_name_();
  // @@protoc_insertion_point(field_mutable:BigBang.LayerParameter.name_)
  return name__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LayerParameter::release_name_() {
  // @@protoc_insertion_point(field_release:BigBang.LayerParameter.name_)
  clear_has_name_();
  return name__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LayerParameter::set_allocated_name_(::std::string* name_) {
  if (name_ != NULL) {
    set_has_name_();
  } else {
    clear_has_name_();
  }
  name__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name_);
  // @@protoc_insertion_point(field_set_allocated:BigBang.LayerParameter.name_)
}

// optional string type_ = 2;
inline bool LayerParameter::has_type_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LayerParameter::set_has_type_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LayerParameter::clear_has_type_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LayerParameter::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type_();
}
inline const ::std::string& LayerParameter::type_() const {
  // @@protoc_insertion_point(field_get:BigBang.LayerParameter.type_)
  return type__.GetNoArena();
}
inline void LayerParameter::set_type_(const ::std::string& value) {
  set_has_type_();
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BigBang.LayerParameter.type_)
}
#if LANG_CXX11
inline void LayerParameter::set_type_(::std::string&& value) {
  set_has_type_();
  type__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BigBang.LayerParameter.type_)
}
#endif
inline void LayerParameter::set_type_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type_();
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BigBang.LayerParameter.type_)
}
inline void LayerParameter::set_type_(const char* value, size_t size) {
  set_has_type_();
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BigBang.LayerParameter.type_)
}
inline ::std::string* LayerParameter::mutable_type_() {
  set_has_type_();
  // @@protoc_insertion_point(field_mutable:BigBang.LayerParameter.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LayerParameter::release_type_() {
  // @@protoc_insertion_point(field_release:BigBang.LayerParameter.type_)
  clear_has_type_();
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LayerParameter::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    set_has_type_();
  } else {
    clear_has_type_();
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:BigBang.LayerParameter.type_)
}

// optional .BigBang.ConvLayerParameter conv_layer_param_ = 100;
inline bool LayerParameter::has_conv_layer_param_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LayerParameter::set_has_conv_layer_param_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LayerParameter::clear_has_conv_layer_param_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LayerParameter::clear_conv_layer_param_() {
  if (conv_layer_param__ != NULL) conv_layer_param__->Clear();
  clear_has_conv_layer_param_();
}
inline const ::BigBang::ConvLayerParameter& LayerParameter::conv_layer_param_() const {
  const ::BigBang::ConvLayerParameter* p = conv_layer_param__;
  // @@protoc_insertion_point(field_get:BigBang.LayerParameter.conv_layer_param_)
  return p != NULL ? *p : *reinterpret_cast<const ::BigBang::ConvLayerParameter*>(
      &::BigBang::_ConvLayerParameter_default_instance_);
}
inline ::BigBang::ConvLayerParameter* LayerParameter::release_conv_layer_param_() {
  // @@protoc_insertion_point(field_release:BigBang.LayerParameter.conv_layer_param_)
  clear_has_conv_layer_param_();
  ::BigBang::ConvLayerParameter* temp = conv_layer_param__;
  conv_layer_param__ = NULL;
  return temp;
}
inline ::BigBang::ConvLayerParameter* LayerParameter::mutable_conv_layer_param_() {
  set_has_conv_layer_param_();
  if (conv_layer_param__ == NULL) {
    conv_layer_param__ = new ::BigBang::ConvLayerParameter;
  }
  // @@protoc_insertion_point(field_mutable:BigBang.LayerParameter.conv_layer_param_)
  return conv_layer_param__;
}
inline void LayerParameter::set_allocated_conv_layer_param_(::BigBang::ConvLayerParameter* conv_layer_param_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete conv_layer_param__;
  }
  if (conv_layer_param_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      conv_layer_param_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conv_layer_param_, submessage_arena);
    }
    set_has_conv_layer_param_();
  } else {
    clear_has_conv_layer_param_();
  }
  conv_layer_param__ = conv_layer_param_;
  // @@protoc_insertion_point(field_set_allocated:BigBang.LayerParameter.conv_layer_param_)
}

// optional .BigBang.InnerProductLayerParameter inner_product_layer_param_ = 101;
inline bool LayerParameter::has_inner_product_layer_param_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LayerParameter::set_has_inner_product_layer_param_() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LayerParameter::clear_has_inner_product_layer_param_() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LayerParameter::clear_inner_product_layer_param_() {
  if (inner_product_layer_param__ != NULL) inner_product_layer_param__->Clear();
  clear_has_inner_product_layer_param_();
}
inline const ::BigBang::InnerProductLayerParameter& LayerParameter::inner_product_layer_param_() const {
  const ::BigBang::InnerProductLayerParameter* p = inner_product_layer_param__;
  // @@protoc_insertion_point(field_get:BigBang.LayerParameter.inner_product_layer_param_)
  return p != NULL ? *p : *reinterpret_cast<const ::BigBang::InnerProductLayerParameter*>(
      &::BigBang::_InnerProductLayerParameter_default_instance_);
}
inline ::BigBang::InnerProductLayerParameter* LayerParameter::release_inner_product_layer_param_() {
  // @@protoc_insertion_point(field_release:BigBang.LayerParameter.inner_product_layer_param_)
  clear_has_inner_product_layer_param_();
  ::BigBang::InnerProductLayerParameter* temp = inner_product_layer_param__;
  inner_product_layer_param__ = NULL;
  return temp;
}
inline ::BigBang::InnerProductLayerParameter* LayerParameter::mutable_inner_product_layer_param_() {
  set_has_inner_product_layer_param_();
  if (inner_product_layer_param__ == NULL) {
    inner_product_layer_param__ = new ::BigBang::InnerProductLayerParameter;
  }
  // @@protoc_insertion_point(field_mutable:BigBang.LayerParameter.inner_product_layer_param_)
  return inner_product_layer_param__;
}
inline void LayerParameter::set_allocated_inner_product_layer_param_(::BigBang::InnerProductLayerParameter* inner_product_layer_param_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete inner_product_layer_param__;
  }
  if (inner_product_layer_param_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inner_product_layer_param_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inner_product_layer_param_, submessage_arena);
    }
    set_has_inner_product_layer_param_();
  } else {
    clear_has_inner_product_layer_param_();
  }
  inner_product_layer_param__ = inner_product_layer_param_;
  // @@protoc_insertion_point(field_set_allocated:BigBang.LayerParameter.inner_product_layer_param_)
}

// optional .BigBang.PoolingLayerParameter pooling_layer_param_ = 102;
inline bool LayerParameter::has_pooling_layer_param_() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LayerParameter::set_has_pooling_layer_param_() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LayerParameter::clear_has_pooling_layer_param_() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LayerParameter::clear_pooling_layer_param_() {
  if (pooling_layer_param__ != NULL) pooling_layer_param__->Clear();
  clear_has_pooling_layer_param_();
}
inline const ::BigBang::PoolingLayerParameter& LayerParameter::pooling_layer_param_() const {
  const ::BigBang::PoolingLayerParameter* p = pooling_layer_param__;
  // @@protoc_insertion_point(field_get:BigBang.LayerParameter.pooling_layer_param_)
  return p != NULL ? *p : *reinterpret_cast<const ::BigBang::PoolingLayerParameter*>(
      &::BigBang::_PoolingLayerParameter_default_instance_);
}
inline ::BigBang::PoolingLayerParameter* LayerParameter::release_pooling_layer_param_() {
  // @@protoc_insertion_point(field_release:BigBang.LayerParameter.pooling_layer_param_)
  clear_has_pooling_layer_param_();
  ::BigBang::PoolingLayerParameter* temp = pooling_layer_param__;
  pooling_layer_param__ = NULL;
  return temp;
}
inline ::BigBang::PoolingLayerParameter* LayerParameter::mutable_pooling_layer_param_() {
  set_has_pooling_layer_param_();
  if (pooling_layer_param__ == NULL) {
    pooling_layer_param__ = new ::BigBang::PoolingLayerParameter;
  }
  // @@protoc_insertion_point(field_mutable:BigBang.LayerParameter.pooling_layer_param_)
  return pooling_layer_param__;
}
inline void LayerParameter::set_allocated_pooling_layer_param_(::BigBang::PoolingLayerParameter* pooling_layer_param_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pooling_layer_param__;
  }
  if (pooling_layer_param_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pooling_layer_param_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pooling_layer_param_, submessage_arena);
    }
    set_has_pooling_layer_param_();
  } else {
    clear_has_pooling_layer_param_();
  }
  pooling_layer_param__ = pooling_layer_param_;
  // @@protoc_insertion_point(field_set_allocated:BigBang.LayerParameter.pooling_layer_param_)
}

// -------------------------------------------------------------------

// NetParameter

// optional string name_ = 1;
inline bool NetParameter::has_name_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetParameter::set_has_name_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetParameter::clear_has_name_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetParameter::clear_name_() {
  name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name_();
}
inline const ::std::string& NetParameter::name_() const {
  // @@protoc_insertion_point(field_get:BigBang.NetParameter.name_)
  return name__.GetNoArena();
}
inline void NetParameter::set_name_(const ::std::string& value) {
  set_has_name_();
  name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BigBang.NetParameter.name_)
}
#if LANG_CXX11
inline void NetParameter::set_name_(::std::string&& value) {
  set_has_name_();
  name__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BigBang.NetParameter.name_)
}
#endif
inline void NetParameter::set_name_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name_();
  name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BigBang.NetParameter.name_)
}
inline void NetParameter::set_name_(const char* value, size_t size) {
  set_has_name_();
  name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BigBang.NetParameter.name_)
}
inline ::std::string* NetParameter::mutable_name_() {
  set_has_name_();
  // @@protoc_insertion_point(field_mutable:BigBang.NetParameter.name_)
  return name__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetParameter::release_name_() {
  // @@protoc_insertion_point(field_release:BigBang.NetParameter.name_)
  clear_has_name_();
  return name__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetParameter::set_allocated_name_(::std::string* name_) {
  if (name_ != NULL) {
    set_has_name_();
  } else {
    clear_has_name_();
  }
  name__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name_);
  // @@protoc_insertion_point(field_set_allocated:BigBang.NetParameter.name_)
}

// repeated .BigBang.LayerParameter layer_param_ = 10;
inline int NetParameter::layer_param__size() const {
  return layer_param__.size();
}
inline void NetParameter::clear_layer_param_() {
  layer_param__.Clear();
}
inline const ::BigBang::LayerParameter& NetParameter::layer_param_(int index) const {
  // @@protoc_insertion_point(field_get:BigBang.NetParameter.layer_param_)
  return layer_param__.Get(index);
}
inline ::BigBang::LayerParameter* NetParameter::mutable_layer_param_(int index) {
  // @@protoc_insertion_point(field_mutable:BigBang.NetParameter.layer_param_)
  return layer_param__.Mutable(index);
}
inline ::BigBang::LayerParameter* NetParameter::add_layer_param_() {
  // @@protoc_insertion_point(field_add:BigBang.NetParameter.layer_param_)
  return layer_param__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BigBang::LayerParameter >*
NetParameter::mutable_layer_param_() {
  // @@protoc_insertion_point(field_mutable_list:BigBang.NetParameter.layer_param_)
  return &layer_param__;
}
inline const ::google::protobuf::RepeatedPtrField< ::BigBang::LayerParameter >&
NetParameter::layer_param_() const {
  // @@protoc_insertion_point(field_list:BigBang.NetParameter.layer_param_)
  return layer_param__;
}

// -------------------------------------------------------------------

// SolverParameter

// optional .BigBang.NetParameter net_param_ = 1;
inline bool SolverParameter::has_net_param_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SolverParameter::set_has_net_param_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SolverParameter::clear_has_net_param_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SolverParameter::clear_net_param_() {
  if (net_param__ != NULL) net_param__->Clear();
  clear_has_net_param_();
}
inline const ::BigBang::NetParameter& SolverParameter::net_param_() const {
  const ::BigBang::NetParameter* p = net_param__;
  // @@protoc_insertion_point(field_get:BigBang.SolverParameter.net_param_)
  return p != NULL ? *p : *reinterpret_cast<const ::BigBang::NetParameter*>(
      &::BigBang::_NetParameter_default_instance_);
}
inline ::BigBang::NetParameter* SolverParameter::release_net_param_() {
  // @@protoc_insertion_point(field_release:BigBang.SolverParameter.net_param_)
  clear_has_net_param_();
  ::BigBang::NetParameter* temp = net_param__;
  net_param__ = NULL;
  return temp;
}
inline ::BigBang::NetParameter* SolverParameter::mutable_net_param_() {
  set_has_net_param_();
  if (net_param__ == NULL) {
    net_param__ = new ::BigBang::NetParameter;
  }
  // @@protoc_insertion_point(field_mutable:BigBang.SolverParameter.net_param_)
  return net_param__;
}
inline void SolverParameter::set_allocated_net_param_(::BigBang::NetParameter* net_param_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete net_param__;
  }
  if (net_param_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      net_param_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, net_param_, submessage_arena);
    }
    set_has_net_param_();
  } else {
    clear_has_net_param_();
  }
  net_param__ = net_param_;
  // @@protoc_insertion_point(field_set_allocated:BigBang.SolverParameter.net_param_)
}

// optional float lr = 2;
inline bool SolverParameter::has_lr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SolverParameter::set_has_lr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SolverParameter::clear_has_lr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SolverParameter::clear_lr() {
  lr_ = 0;
  clear_has_lr();
}
inline float SolverParameter::lr() const {
  // @@protoc_insertion_point(field_get:BigBang.SolverParameter.lr)
  return lr_;
}
inline void SolverParameter::set_lr(float value) {
  set_has_lr();
  lr_ = value;
  // @@protoc_insertion_point(field_set:BigBang.SolverParameter.lr)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace BigBang

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::BigBang::PoolingLayerParameter_PoolingMethod> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BigBang::PoolingLayerParameter_PoolingMethod>() {
  return ::BigBang::PoolingLayerParameter_PoolingMethod_descriptor();
}
template <> struct is_proto_enum< ::BigBang::FillerParameter> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BigBang::FillerParameter>() {
  return ::BigBang::FillerParameter_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bigbang_2eproto__INCLUDED
