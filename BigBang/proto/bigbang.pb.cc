// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bigbang.proto

#include "bigbang.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace BigBang {
class PoolingLayerParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PoolingLayerParameter>
      _instance;
} _PoolingLayerParameter_default_instance_;
class ConvLayerParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvLayerParameter>
      _instance;
} _ConvLayerParameter_default_instance_;
class InnerProductLayerParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InnerProductLayerParameter>
      _instance;
} _InnerProductLayerParameter_default_instance_;
class LayerParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LayerParameter>
      _instance;
} _LayerParameter_default_instance_;
class NetParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetParameter>
      _instance;
} _NetParameter_default_instance_;
class SolverParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolverParameter>
      _instance;
} _SolverParameter_default_instance_;
}  // namespace BigBang
namespace protobuf_bigbang_2eproto {
void InitDefaultsPoolingLayerParameterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BigBang::_PoolingLayerParameter_default_instance_;
    new (ptr) ::BigBang::PoolingLayerParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BigBang::PoolingLayerParameter::InitAsDefaultInstance();
}

void InitDefaultsPoolingLayerParameter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoolingLayerParameterImpl);
}

void InitDefaultsConvLayerParameterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BigBang::_ConvLayerParameter_default_instance_;
    new (ptr) ::BigBang::ConvLayerParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BigBang::ConvLayerParameter::InitAsDefaultInstance();
}

void InitDefaultsConvLayerParameter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConvLayerParameterImpl);
}

void InitDefaultsInnerProductLayerParameterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BigBang::_InnerProductLayerParameter_default_instance_;
    new (ptr) ::BigBang::InnerProductLayerParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BigBang::InnerProductLayerParameter::InitAsDefaultInstance();
}

void InitDefaultsInnerProductLayerParameter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInnerProductLayerParameterImpl);
}

void InitDefaultsLayerParameterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bigbang_2eproto::InitDefaultsConvLayerParameter();
  protobuf_bigbang_2eproto::InitDefaultsInnerProductLayerParameter();
  protobuf_bigbang_2eproto::InitDefaultsPoolingLayerParameter();
  {
    void* ptr = &::BigBang::_LayerParameter_default_instance_;
    new (ptr) ::BigBang::LayerParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BigBang::LayerParameter::InitAsDefaultInstance();
}

void InitDefaultsLayerParameter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLayerParameterImpl);
}

void InitDefaultsNetParameterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bigbang_2eproto::InitDefaultsLayerParameter();
  {
    void* ptr = &::BigBang::_NetParameter_default_instance_;
    new (ptr) ::BigBang::NetParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BigBang::NetParameter::InitAsDefaultInstance();
}

void InitDefaultsNetParameter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNetParameterImpl);
}

void InitDefaultsSolverParameterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bigbang_2eproto::InitDefaultsNetParameter();
  {
    void* ptr = &::BigBang::_SolverParameter_default_instance_;
    new (ptr) ::BigBang::SolverParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BigBang::SolverParameter::InitAsDefaultInstance();
}

void InitDefaultsSolverParameter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSolverParameterImpl);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::PoolingLayerParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::PoolingLayerParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::PoolingLayerParameter, pool__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::PoolingLayerParameter, kernel_h__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::PoolingLayerParameter, kernel_w__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::PoolingLayerParameter, stride_h__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::PoolingLayerParameter, stride_w__),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, kernel_groups__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, kernel_channels__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, kernel_h__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, kernel_w__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, pad_h__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, pad_w__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, stride_h__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, stride_w__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, use_bias__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, weight_filler__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::ConvLayerParameter, bias_filler__),
  5,
  6,
  7,
  8,
  0,
  1,
  9,
  10,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::InnerProductLayerParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::InnerProductLayerParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::InnerProductLayerParameter, use_bias__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::InnerProductLayerParameter, weight_filler__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::InnerProductLayerParameter, bias_filler__),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::LayerParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::LayerParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::LayerParameter, name__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::LayerParameter, type__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::LayerParameter, conv_layer_param__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::LayerParameter, inner_product_layer_param__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::LayerParameter, pooling_layer_param__),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::NetParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::NetParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::NetParameter, name__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::NetParameter, layer_param__),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::SolverParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::SolverParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::SolverParameter, net_param__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BigBang::SolverParameter, lr_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::BigBang::PoolingLayerParameter)},
  { 15, 31, sizeof(::BigBang::ConvLayerParameter)},
  { 42, 50, sizeof(::BigBang::InnerProductLayerParameter)},
  { 53, 63, sizeof(::BigBang::LayerParameter)},
  { 68, 75, sizeof(::BigBang::NetParameter)},
  { 77, 84, sizeof(::BigBang::SolverParameter)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::BigBang::_PoolingLayerParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BigBang::_ConvLayerParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BigBang::_InnerProductLayerParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BigBang::_LayerParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BigBang::_NetParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BigBang::_SolverParameter_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "bigbang.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rbigbang.proto\022\007BigBang\"\330\001\n\025PoolingLaye"
      "rParameter\022@\n\005pool_\030\001 \001(\0162,.BigBang.Pool"
      "ingLayerParameter.PoolingMethod:\003MAX\022\024\n\t"
      "kernel_h_\030\002 \001(\r:\0011\022\024\n\tkernel_w_\030\003 \001(\r:\0011"
      "\022\024\n\tstride_h_\030\004 \001(\r:\0011\022\024\n\tstride_w_\030\005 \001("
      "\r:\0011\"%\n\rPoolingMethod\022\007\n\003MAX\020\000\022\013\n\007AVERAG"
      "E\020\001\"\347\002\n\022ConvLayerParameter\022\031\n\016kernel_gro"
      "ups_\030\001 \001(\r:\0011\022\033\n\020kernel_channels_\030\002 \001(\r:"
      "\0011\022\024\n\tkernel_h_\030\003 \001(\r:\0011\022\024\n\tkernel_w_\030\004 "
      "\001(\r:\0011\022\016\n\006pad_h_\030\005 \001(\r\022\016\n\006pad_w_\030\006 \001(\r\022\024"
      "\n\tstride_h_\030\007 \001(\r:\0011\022\024\n\tstride_w_\030\010 \001(\r:"
      "\0011\022\021\n\tuse_bias_\030\t \001(\010\022G\n\016weight_filler_\030"
      "\n \001(\0162\030.BigBang.FillerParameter:\025GAUSSIA"
      "N_DISTRIBUTION\022E\n\014bias_filler_\030\013 \001(\0162\030.B"
      "igBang.FillerParameter:\025GAUSSIAN_DISTRIB"
      "UTION\"\277\001\n\032InnerProductLayerParameter\022\021\n\t"
      "use_bias_\030\001 \001(\010\022G\n\016weight_filler_\030\n \001(\0162"
      "\030.BigBang.FillerParameter:\025GAUSSIAN_DIST"
      "RIBUTION\022E\n\014bias_filler_\030\013 \001(\0162\030.BigBang"
      ".FillerParameter:\025GAUSSIAN_DISTRIBUTION\""
      "\355\001\n\016LayerParameter\022\r\n\005name_\030\001 \001(\t\022\r\n\005typ"
      "e_\030\002 \001(\t\0226\n\021conv_layer_param_\030d \001(\0132\033.Bi"
      "gBang.ConvLayerParameter\022G\n\032inner_produc"
      "t_layer_param_\030e \001(\0132#.BigBang.InnerProd"
      "uctLayerParameter\022<\n\024pooling_layer_param"
      "_\030f \001(\0132\036.BigBang.PoolingLayerParameter\""
      "L\n\014NetParameter\022\r\n\005name_\030\001 \001(\t\022-\n\014layer_"
      "param_\030\n \003(\0132\027.BigBang.LayerParameter\"H\n"
      "\017SolverParameter\022)\n\nnet_param_\030\001 \001(\0132\025.B"
      "igBang.NetParameter\022\n\n\002lr\030\002 \001(\002*,\n\017Fille"
      "rParameter\022\031\n\025GAUSSIAN_DISTRIBUTION\020\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1237);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bigbang.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_bigbang_2eproto
namespace BigBang {
const ::google::protobuf::EnumDescriptor* PoolingLayerParameter_PoolingMethod_descriptor() {
  protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bigbang_2eproto::file_level_enum_descriptors[0];
}
bool PoolingLayerParameter_PoolingMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PoolingLayerParameter_PoolingMethod PoolingLayerParameter::MAX;
const PoolingLayerParameter_PoolingMethod PoolingLayerParameter::AVERAGE;
const PoolingLayerParameter_PoolingMethod PoolingLayerParameter::PoolingMethod_MIN;
const PoolingLayerParameter_PoolingMethod PoolingLayerParameter::PoolingMethod_MAX;
const int PoolingLayerParameter::PoolingMethod_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FillerParameter_descriptor() {
  protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bigbang_2eproto::file_level_enum_descriptors[1];
}
bool FillerParameter_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PoolingLayerParameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PoolingLayerParameter::kPoolFieldNumber;
const int PoolingLayerParameter::kKernelHFieldNumber;
const int PoolingLayerParameter::kKernelWFieldNumber;
const int PoolingLayerParameter::kStrideHFieldNumber;
const int PoolingLayerParameter::kStrideWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PoolingLayerParameter::PoolingLayerParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bigbang_2eproto::InitDefaultsPoolingLayerParameter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BigBang.PoolingLayerParameter)
}
PoolingLayerParameter::PoolingLayerParameter(const PoolingLayerParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pool__, &from.pool__,
    static_cast<size_t>(reinterpret_cast<char*>(&stride_w__) -
    reinterpret_cast<char*>(&pool__)) + sizeof(stride_w__));
  // @@protoc_insertion_point(copy_constructor:BigBang.PoolingLayerParameter)
}

void PoolingLayerParameter::SharedCtor() {
  _cached_size_ = 0;
  pool__ = 0;
  kernel_h__ = 1u;
  kernel_w__ = 1u;
  stride_h__ = 1u;
  stride_w__ = 1u;
}

PoolingLayerParameter::~PoolingLayerParameter() {
  // @@protoc_insertion_point(destructor:BigBang.PoolingLayerParameter)
  SharedDtor();
}

void PoolingLayerParameter::SharedDtor() {
}

void PoolingLayerParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PoolingLayerParameter::descriptor() {
  ::protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbang_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PoolingLayerParameter& PoolingLayerParameter::default_instance() {
  ::protobuf_bigbang_2eproto::InitDefaultsPoolingLayerParameter();
  return *internal_default_instance();
}

PoolingLayerParameter* PoolingLayerParameter::New(::google::protobuf::Arena* arena) const {
  PoolingLayerParameter* n = new PoolingLayerParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PoolingLayerParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:BigBang.PoolingLayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    pool__ = 0;
    kernel_h__ = 1u;
    kernel_w__ = 1u;
    stride_h__ = 1u;
    stride_w__ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PoolingLayerParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BigBang.PoolingLayerParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .BigBang.PoolingLayerParameter.PoolingMethod pool_ = 1 [default = MAX];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BigBang::PoolingLayerParameter_PoolingMethod_IsValid(value)) {
            set_pool_(static_cast< ::BigBang::PoolingLayerParameter_PoolingMethod >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 kernel_h_ = 2 [default = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_kernel_h_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kernel_h__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 kernel_w_ = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_kernel_w_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kernel_w__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stride_h_ = 4 [default = 1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_stride_h_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stride_h__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stride_w_ = 5 [default = 1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_stride_w_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stride_w__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BigBang.PoolingLayerParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BigBang.PoolingLayerParameter)
  return false;
#undef DO_
}

void PoolingLayerParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BigBang.PoolingLayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .BigBang.PoolingLayerParameter.PoolingMethod pool_ = 1 [default = MAX];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->pool_(), output);
  }

  // optional uint32 kernel_h_ = 2 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->kernel_h_(), output);
  }

  // optional uint32 kernel_w_ = 3 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->kernel_w_(), output);
  }

  // optional uint32 stride_h_ = 4 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->stride_h_(), output);
  }

  // optional uint32 stride_w_ = 5 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->stride_w_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BigBang.PoolingLayerParameter)
}

::google::protobuf::uint8* PoolingLayerParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BigBang.PoolingLayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .BigBang.PoolingLayerParameter.PoolingMethod pool_ = 1 [default = MAX];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->pool_(), target);
  }

  // optional uint32 kernel_h_ = 2 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->kernel_h_(), target);
  }

  // optional uint32 kernel_w_ = 3 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->kernel_w_(), target);
  }

  // optional uint32 stride_h_ = 4 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->stride_h_(), target);
  }

  // optional uint32 stride_w_ = 5 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->stride_w_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BigBang.PoolingLayerParameter)
  return target;
}

size_t PoolingLayerParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BigBang.PoolingLayerParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .BigBang.PoolingLayerParameter.PoolingMethod pool_ = 1 [default = MAX];
    if (has_pool_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pool_());
    }

    // optional uint32 kernel_h_ = 2 [default = 1];
    if (has_kernel_h_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->kernel_h_());
    }

    // optional uint32 kernel_w_ = 3 [default = 1];
    if (has_kernel_w_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->kernel_w_());
    }

    // optional uint32 stride_h_ = 4 [default = 1];
    if (has_stride_h_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stride_h_());
    }

    // optional uint32 stride_w_ = 5 [default = 1];
    if (has_stride_w_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stride_w_());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PoolingLayerParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BigBang.PoolingLayerParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const PoolingLayerParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PoolingLayerParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BigBang.PoolingLayerParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BigBang.PoolingLayerParameter)
    MergeFrom(*source);
  }
}

void PoolingLayerParameter::MergeFrom(const PoolingLayerParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BigBang.PoolingLayerParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      pool__ = from.pool__;
    }
    if (cached_has_bits & 0x00000002u) {
      kernel_h__ = from.kernel_h__;
    }
    if (cached_has_bits & 0x00000004u) {
      kernel_w__ = from.kernel_w__;
    }
    if (cached_has_bits & 0x00000008u) {
      stride_h__ = from.stride_h__;
    }
    if (cached_has_bits & 0x00000010u) {
      stride_w__ = from.stride_w__;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PoolingLayerParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BigBang.PoolingLayerParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PoolingLayerParameter::CopyFrom(const PoolingLayerParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BigBang.PoolingLayerParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoolingLayerParameter::IsInitialized() const {
  return true;
}

void PoolingLayerParameter::Swap(PoolingLayerParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PoolingLayerParameter::InternalSwap(PoolingLayerParameter* other) {
  using std::swap;
  swap(pool__, other->pool__);
  swap(kernel_h__, other->kernel_h__);
  swap(kernel_w__, other->kernel_w__);
  swap(stride_h__, other->stride_h__);
  swap(stride_w__, other->stride_w__);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PoolingLayerParameter::GetMetadata() const {
  protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbang_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConvLayerParameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConvLayerParameter::kKernelGroupsFieldNumber;
const int ConvLayerParameter::kKernelChannelsFieldNumber;
const int ConvLayerParameter::kKernelHFieldNumber;
const int ConvLayerParameter::kKernelWFieldNumber;
const int ConvLayerParameter::kPadHFieldNumber;
const int ConvLayerParameter::kPadWFieldNumber;
const int ConvLayerParameter::kStrideHFieldNumber;
const int ConvLayerParameter::kStrideWFieldNumber;
const int ConvLayerParameter::kUseBiasFieldNumber;
const int ConvLayerParameter::kWeightFillerFieldNumber;
const int ConvLayerParameter::kBiasFillerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConvLayerParameter::ConvLayerParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bigbang_2eproto::InitDefaultsConvLayerParameter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BigBang.ConvLayerParameter)
}
ConvLayerParameter::ConvLayerParameter(const ConvLayerParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pad_h__, &from.pad_h__,
    static_cast<size_t>(reinterpret_cast<char*>(&stride_w__) -
    reinterpret_cast<char*>(&pad_h__)) + sizeof(stride_w__));
  // @@protoc_insertion_point(copy_constructor:BigBang.ConvLayerParameter)
}

void ConvLayerParameter::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pad_h__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bias_filler__) -
      reinterpret_cast<char*>(&pad_h__)) + sizeof(bias_filler__));
  kernel_groups__ = 1u;
  kernel_channels__ = 1u;
  kernel_h__ = 1u;
  kernel_w__ = 1u;
  stride_h__ = 1u;
  stride_w__ = 1u;
}

ConvLayerParameter::~ConvLayerParameter() {
  // @@protoc_insertion_point(destructor:BigBang.ConvLayerParameter)
  SharedDtor();
}

void ConvLayerParameter::SharedDtor() {
}

void ConvLayerParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConvLayerParameter::descriptor() {
  ::protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbang_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConvLayerParameter& ConvLayerParameter::default_instance() {
  ::protobuf_bigbang_2eproto::InitDefaultsConvLayerParameter();
  return *internal_default_instance();
}

ConvLayerParameter* ConvLayerParameter::New(::google::protobuf::Arena* arena) const {
  ConvLayerParameter* n = new ConvLayerParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConvLayerParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:BigBang.ConvLayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&pad_h__, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bias_filler__) -
        reinterpret_cast<char*>(&pad_h__)) + sizeof(bias_filler__));
    kernel_groups__ = 1u;
    kernel_channels__ = 1u;
    kernel_h__ = 1u;
  }
  if (cached_has_bits & 1792u) {
    kernel_w__ = 1u;
    stride_h__ = 1u;
    stride_w__ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConvLayerParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BigBang.ConvLayerParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 kernel_groups_ = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_kernel_groups_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kernel_groups__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 kernel_channels_ = 2 [default = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_kernel_channels_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kernel_channels__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 kernel_h_ = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_kernel_h_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kernel_h__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 kernel_w_ = 4 [default = 1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_kernel_w_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kernel_w__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pad_h_ = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_pad_h_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pad_h__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pad_w_ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_pad_w_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pad_w__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stride_h_ = 7 [default = 1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_stride_h_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stride_h__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stride_w_ = 8 [default = 1];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_stride_w_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stride_w__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_bias_ = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_use_bias_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_bias__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .BigBang.FillerParameter weight_filler_ = 10 [default = GAUSSIAN_DISTRIBUTION];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BigBang::FillerParameter_IsValid(value)) {
            set_weight_filler_(static_cast< ::BigBang::FillerParameter >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .BigBang.FillerParameter bias_filler_ = 11 [default = GAUSSIAN_DISTRIBUTION];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BigBang::FillerParameter_IsValid(value)) {
            set_bias_filler_(static_cast< ::BigBang::FillerParameter >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                11, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BigBang.ConvLayerParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BigBang.ConvLayerParameter)
  return false;
#undef DO_
}

void ConvLayerParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BigBang.ConvLayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 kernel_groups_ = 1 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->kernel_groups_(), output);
  }

  // optional uint32 kernel_channels_ = 2 [default = 1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->kernel_channels_(), output);
  }

  // optional uint32 kernel_h_ = 3 [default = 1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->kernel_h_(), output);
  }

  // optional uint32 kernel_w_ = 4 [default = 1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->kernel_w_(), output);
  }

  // optional uint32 pad_h_ = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pad_h_(), output);
  }

  // optional uint32 pad_w_ = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pad_w_(), output);
  }

  // optional uint32 stride_h_ = 7 [default = 1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->stride_h_(), output);
  }

  // optional uint32 stride_w_ = 8 [default = 1];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->stride_w_(), output);
  }

  // optional bool use_bias_ = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->use_bias_(), output);
  }

  // optional .BigBang.FillerParameter weight_filler_ = 10 [default = GAUSSIAN_DISTRIBUTION];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->weight_filler_(), output);
  }

  // optional .BigBang.FillerParameter bias_filler_ = 11 [default = GAUSSIAN_DISTRIBUTION];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->bias_filler_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BigBang.ConvLayerParameter)
}

::google::protobuf::uint8* ConvLayerParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BigBang.ConvLayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 kernel_groups_ = 1 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->kernel_groups_(), target);
  }

  // optional uint32 kernel_channels_ = 2 [default = 1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->kernel_channels_(), target);
  }

  // optional uint32 kernel_h_ = 3 [default = 1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->kernel_h_(), target);
  }

  // optional uint32 kernel_w_ = 4 [default = 1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->kernel_w_(), target);
  }

  // optional uint32 pad_h_ = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pad_h_(), target);
  }

  // optional uint32 pad_w_ = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pad_w_(), target);
  }

  // optional uint32 stride_h_ = 7 [default = 1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->stride_h_(), target);
  }

  // optional uint32 stride_w_ = 8 [default = 1];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->stride_w_(), target);
  }

  // optional bool use_bias_ = 9;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->use_bias_(), target);
  }

  // optional .BigBang.FillerParameter weight_filler_ = 10 [default = GAUSSIAN_DISTRIBUTION];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->weight_filler_(), target);
  }

  // optional .BigBang.FillerParameter bias_filler_ = 11 [default = GAUSSIAN_DISTRIBUTION];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->bias_filler_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BigBang.ConvLayerParameter)
  return target;
}

size_t ConvLayerParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BigBang.ConvLayerParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 pad_h_ = 5;
    if (has_pad_h_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pad_h_());
    }

    // optional uint32 pad_w_ = 6;
    if (has_pad_w_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pad_w_());
    }

    // optional bool use_bias_ = 9;
    if (has_use_bias_()) {
      total_size += 1 + 1;
    }

    // optional .BigBang.FillerParameter weight_filler_ = 10 [default = GAUSSIAN_DISTRIBUTION];
    if (has_weight_filler_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->weight_filler_());
    }

    // optional .BigBang.FillerParameter bias_filler_ = 11 [default = GAUSSIAN_DISTRIBUTION];
    if (has_bias_filler_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bias_filler_());
    }

    // optional uint32 kernel_groups_ = 1 [default = 1];
    if (has_kernel_groups_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->kernel_groups_());
    }

    // optional uint32 kernel_channels_ = 2 [default = 1];
    if (has_kernel_channels_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->kernel_channels_());
    }

    // optional uint32 kernel_h_ = 3 [default = 1];
    if (has_kernel_h_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->kernel_h_());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional uint32 kernel_w_ = 4 [default = 1];
    if (has_kernel_w_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->kernel_w_());
    }

    // optional uint32 stride_h_ = 7 [default = 1];
    if (has_stride_h_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stride_h_());
    }

    // optional uint32 stride_w_ = 8 [default = 1];
    if (has_stride_w_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stride_w_());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConvLayerParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BigBang.ConvLayerParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvLayerParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConvLayerParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BigBang.ConvLayerParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BigBang.ConvLayerParameter)
    MergeFrom(*source);
  }
}

void ConvLayerParameter::MergeFrom(const ConvLayerParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BigBang.ConvLayerParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      pad_h__ = from.pad_h__;
    }
    if (cached_has_bits & 0x00000002u) {
      pad_w__ = from.pad_w__;
    }
    if (cached_has_bits & 0x00000004u) {
      use_bias__ = from.use_bias__;
    }
    if (cached_has_bits & 0x00000008u) {
      weight_filler__ = from.weight_filler__;
    }
    if (cached_has_bits & 0x00000010u) {
      bias_filler__ = from.bias_filler__;
    }
    if (cached_has_bits & 0x00000020u) {
      kernel_groups__ = from.kernel_groups__;
    }
    if (cached_has_bits & 0x00000040u) {
      kernel_channels__ = from.kernel_channels__;
    }
    if (cached_has_bits & 0x00000080u) {
      kernel_h__ = from.kernel_h__;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      kernel_w__ = from.kernel_w__;
    }
    if (cached_has_bits & 0x00000200u) {
      stride_h__ = from.stride_h__;
    }
    if (cached_has_bits & 0x00000400u) {
      stride_w__ = from.stride_w__;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConvLayerParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BigBang.ConvLayerParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvLayerParameter::CopyFrom(const ConvLayerParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BigBang.ConvLayerParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvLayerParameter::IsInitialized() const {
  return true;
}

void ConvLayerParameter::Swap(ConvLayerParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConvLayerParameter::InternalSwap(ConvLayerParameter* other) {
  using std::swap;
  swap(pad_h__, other->pad_h__);
  swap(pad_w__, other->pad_w__);
  swap(use_bias__, other->use_bias__);
  swap(weight_filler__, other->weight_filler__);
  swap(bias_filler__, other->bias_filler__);
  swap(kernel_groups__, other->kernel_groups__);
  swap(kernel_channels__, other->kernel_channels__);
  swap(kernel_h__, other->kernel_h__);
  swap(kernel_w__, other->kernel_w__);
  swap(stride_h__, other->stride_h__);
  swap(stride_w__, other->stride_w__);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConvLayerParameter::GetMetadata() const {
  protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbang_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InnerProductLayerParameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InnerProductLayerParameter::kUseBiasFieldNumber;
const int InnerProductLayerParameter::kWeightFillerFieldNumber;
const int InnerProductLayerParameter::kBiasFillerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InnerProductLayerParameter::InnerProductLayerParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bigbang_2eproto::InitDefaultsInnerProductLayerParameter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BigBang.InnerProductLayerParameter)
}
InnerProductLayerParameter::InnerProductLayerParameter(const InnerProductLayerParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bias_filler__, &from.bias_filler__,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_filler__) -
    reinterpret_cast<char*>(&bias_filler__)) + sizeof(weight_filler__));
  // @@protoc_insertion_point(copy_constructor:BigBang.InnerProductLayerParameter)
}

void InnerProductLayerParameter::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bias_filler__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_filler__) -
      reinterpret_cast<char*>(&bias_filler__)) + sizeof(weight_filler__));
}

InnerProductLayerParameter::~InnerProductLayerParameter() {
  // @@protoc_insertion_point(destructor:BigBang.InnerProductLayerParameter)
  SharedDtor();
}

void InnerProductLayerParameter::SharedDtor() {
}

void InnerProductLayerParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InnerProductLayerParameter::descriptor() {
  ::protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbang_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InnerProductLayerParameter& InnerProductLayerParameter::default_instance() {
  ::protobuf_bigbang_2eproto::InitDefaultsInnerProductLayerParameter();
  return *internal_default_instance();
}

InnerProductLayerParameter* InnerProductLayerParameter::New(::google::protobuf::Arena* arena) const {
  InnerProductLayerParameter* n = new InnerProductLayerParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InnerProductLayerParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:BigBang.InnerProductLayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&bias_filler__, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&weight_filler__) -
        reinterpret_cast<char*>(&bias_filler__)) + sizeof(weight_filler__));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InnerProductLayerParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BigBang.InnerProductLayerParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool use_bias_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_use_bias_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_bias__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .BigBang.FillerParameter weight_filler_ = 10 [default = GAUSSIAN_DISTRIBUTION];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BigBang::FillerParameter_IsValid(value)) {
            set_weight_filler_(static_cast< ::BigBang::FillerParameter >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .BigBang.FillerParameter bias_filler_ = 11 [default = GAUSSIAN_DISTRIBUTION];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BigBang::FillerParameter_IsValid(value)) {
            set_bias_filler_(static_cast< ::BigBang::FillerParameter >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                11, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BigBang.InnerProductLayerParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BigBang.InnerProductLayerParameter)
  return false;
#undef DO_
}

void InnerProductLayerParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BigBang.InnerProductLayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool use_bias_ = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_bias_(), output);
  }

  // optional .BigBang.FillerParameter weight_filler_ = 10 [default = GAUSSIAN_DISTRIBUTION];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->weight_filler_(), output);
  }

  // optional .BigBang.FillerParameter bias_filler_ = 11 [default = GAUSSIAN_DISTRIBUTION];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->bias_filler_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BigBang.InnerProductLayerParameter)
}

::google::protobuf::uint8* InnerProductLayerParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BigBang.InnerProductLayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool use_bias_ = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_bias_(), target);
  }

  // optional .BigBang.FillerParameter weight_filler_ = 10 [default = GAUSSIAN_DISTRIBUTION];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->weight_filler_(), target);
  }

  // optional .BigBang.FillerParameter bias_filler_ = 11 [default = GAUSSIAN_DISTRIBUTION];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->bias_filler_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BigBang.InnerProductLayerParameter)
  return target;
}

size_t InnerProductLayerParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BigBang.InnerProductLayerParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .BigBang.FillerParameter bias_filler_ = 11 [default = GAUSSIAN_DISTRIBUTION];
    if (has_bias_filler_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bias_filler_());
    }

    // optional bool use_bias_ = 1;
    if (has_use_bias_()) {
      total_size += 1 + 1;
    }

    // optional .BigBang.FillerParameter weight_filler_ = 10 [default = GAUSSIAN_DISTRIBUTION];
    if (has_weight_filler_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->weight_filler_());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InnerProductLayerParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BigBang.InnerProductLayerParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const InnerProductLayerParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InnerProductLayerParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BigBang.InnerProductLayerParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BigBang.InnerProductLayerParameter)
    MergeFrom(*source);
  }
}

void InnerProductLayerParameter::MergeFrom(const InnerProductLayerParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BigBang.InnerProductLayerParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bias_filler__ = from.bias_filler__;
    }
    if (cached_has_bits & 0x00000002u) {
      use_bias__ = from.use_bias__;
    }
    if (cached_has_bits & 0x00000004u) {
      weight_filler__ = from.weight_filler__;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InnerProductLayerParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BigBang.InnerProductLayerParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InnerProductLayerParameter::CopyFrom(const InnerProductLayerParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BigBang.InnerProductLayerParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerProductLayerParameter::IsInitialized() const {
  return true;
}

void InnerProductLayerParameter::Swap(InnerProductLayerParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InnerProductLayerParameter::InternalSwap(InnerProductLayerParameter* other) {
  using std::swap;
  swap(bias_filler__, other->bias_filler__);
  swap(use_bias__, other->use_bias__);
  swap(weight_filler__, other->weight_filler__);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InnerProductLayerParameter::GetMetadata() const {
  protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbang_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LayerParameter::InitAsDefaultInstance() {
  ::BigBang::_LayerParameter_default_instance_._instance.get_mutable()->conv_layer_param__ = const_cast< ::BigBang::ConvLayerParameter*>(
      ::BigBang::ConvLayerParameter::internal_default_instance());
  ::BigBang::_LayerParameter_default_instance_._instance.get_mutable()->inner_product_layer_param__ = const_cast< ::BigBang::InnerProductLayerParameter*>(
      ::BigBang::InnerProductLayerParameter::internal_default_instance());
  ::BigBang::_LayerParameter_default_instance_._instance.get_mutable()->pooling_layer_param__ = const_cast< ::BigBang::PoolingLayerParameter*>(
      ::BigBang::PoolingLayerParameter::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LayerParameter::kNameFieldNumber;
const int LayerParameter::kTypeFieldNumber;
const int LayerParameter::kConvLayerParamFieldNumber;
const int LayerParameter::kInnerProductLayerParamFieldNumber;
const int LayerParameter::kPoolingLayerParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LayerParameter::LayerParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bigbang_2eproto::InitDefaultsLayerParameter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BigBang.LayerParameter)
}
LayerParameter::LayerParameter(const LayerParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name_()) {
    name__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name__);
  }
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type_()) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.has_conv_layer_param_()) {
    conv_layer_param__ = new ::BigBang::ConvLayerParameter(*from.conv_layer_param__);
  } else {
    conv_layer_param__ = NULL;
  }
  if (from.has_inner_product_layer_param_()) {
    inner_product_layer_param__ = new ::BigBang::InnerProductLayerParameter(*from.inner_product_layer_param__);
  } else {
    inner_product_layer_param__ = NULL;
  }
  if (from.has_pooling_layer_param_()) {
    pooling_layer_param__ = new ::BigBang::PoolingLayerParameter(*from.pooling_layer_param__);
  } else {
    pooling_layer_param__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:BigBang.LayerParameter)
}

void LayerParameter::SharedCtor() {
  _cached_size_ = 0;
  name__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&conv_layer_param__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pooling_layer_param__) -
      reinterpret_cast<char*>(&conv_layer_param__)) + sizeof(pooling_layer_param__));
}

LayerParameter::~LayerParameter() {
  // @@protoc_insertion_point(destructor:BigBang.LayerParameter)
  SharedDtor();
}

void LayerParameter::SharedDtor() {
  name__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete conv_layer_param__;
  if (this != internal_default_instance()) delete inner_product_layer_param__;
  if (this != internal_default_instance()) delete pooling_layer_param__;
}

void LayerParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LayerParameter::descriptor() {
  ::protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbang_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LayerParameter& LayerParameter::default_instance() {
  ::protobuf_bigbang_2eproto::InitDefaultsLayerParameter();
  return *internal_default_instance();
}

LayerParameter* LayerParameter::New(::google::protobuf::Arena* arena) const {
  LayerParameter* n = new LayerParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LayerParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:BigBang.LayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name__.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name__.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!type__.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*type__.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(conv_layer_param__ != NULL);
      conv_layer_param__->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(inner_product_layer_param__ != NULL);
      inner_product_layer_param__->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(pooling_layer_param__ != NULL);
      pooling_layer_param__->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LayerParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BigBang.LayerParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name_().data(), static_cast<int>(this->name_().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BigBang.LayerParameter.name_");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string type_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BigBang.LayerParameter.type_");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .BigBang.ConvLayerParameter conv_layer_param_ = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conv_layer_param_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .BigBang.InnerProductLayerParameter inner_product_layer_param_ = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inner_product_layer_param_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .BigBang.PoolingLayerParameter pooling_layer_param_ = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pooling_layer_param_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BigBang.LayerParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BigBang.LayerParameter)
  return false;
#undef DO_
}

void LayerParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BigBang.LayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name_().data(), static_cast<int>(this->name_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BigBang.LayerParameter.name_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name_(), output);
  }

  // optional string type_ = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BigBang.LayerParameter.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type_(), output);
  }

  // optional .BigBang.ConvLayerParameter conv_layer_param_ = 100;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->conv_layer_param__, output);
  }

  // optional .BigBang.InnerProductLayerParameter inner_product_layer_param_ = 101;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, *this->inner_product_layer_param__, output);
  }

  // optional .BigBang.PoolingLayerParameter pooling_layer_param_ = 102;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, *this->pooling_layer_param__, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BigBang.LayerParameter)
}

::google::protobuf::uint8* LayerParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BigBang.LayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name_().data(), static_cast<int>(this->name_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BigBang.LayerParameter.name_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name_(), target);
  }

  // optional string type_ = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BigBang.LayerParameter.type_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type_(), target);
  }

  // optional .BigBang.ConvLayerParameter conv_layer_param_ = 100;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, *this->conv_layer_param__, deterministic, target);
  }

  // optional .BigBang.InnerProductLayerParameter inner_product_layer_param_ = 101;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101, *this->inner_product_layer_param__, deterministic, target);
  }

  // optional .BigBang.PoolingLayerParameter pooling_layer_param_ = 102;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        102, *this->pooling_layer_param__, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BigBang.LayerParameter)
  return target;
}

size_t LayerParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BigBang.LayerParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string name_ = 1;
    if (has_name_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name_());
    }

    // optional string type_ = 2;
    if (has_type_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type_());
    }

    // optional .BigBang.ConvLayerParameter conv_layer_param_ = 100;
    if (has_conv_layer_param_()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->conv_layer_param__);
    }

    // optional .BigBang.InnerProductLayerParameter inner_product_layer_param_ = 101;
    if (has_inner_product_layer_param_()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->inner_product_layer_param__);
    }

    // optional .BigBang.PoolingLayerParameter pooling_layer_param_ = 102;
    if (has_pooling_layer_param_()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->pooling_layer_param__);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LayerParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BigBang.LayerParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const LayerParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LayerParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BigBang.LayerParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BigBang.LayerParameter)
    MergeFrom(*source);
  }
}

void LayerParameter::MergeFrom(const LayerParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BigBang.LayerParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name_();
      name__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name__);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_type_();
      type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_conv_layer_param_()->::BigBang::ConvLayerParameter::MergeFrom(from.conv_layer_param_());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_inner_product_layer_param_()->::BigBang::InnerProductLayerParameter::MergeFrom(from.inner_product_layer_param_());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_pooling_layer_param_()->::BigBang::PoolingLayerParameter::MergeFrom(from.pooling_layer_param_());
    }
  }
}

void LayerParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BigBang.LayerParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayerParameter::CopyFrom(const LayerParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BigBang.LayerParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerParameter::IsInitialized() const {
  return true;
}

void LayerParameter::Swap(LayerParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LayerParameter::InternalSwap(LayerParameter* other) {
  using std::swap;
  name__.Swap(&other->name__);
  type__.Swap(&other->type__);
  swap(conv_layer_param__, other->conv_layer_param__);
  swap(inner_product_layer_param__, other->inner_product_layer_param__);
  swap(pooling_layer_param__, other->pooling_layer_param__);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LayerParameter::GetMetadata() const {
  protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbang_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NetParameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetParameter::kNameFieldNumber;
const int NetParameter::kLayerParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetParameter::NetParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bigbang_2eproto::InitDefaultsNetParameter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BigBang.NetParameter)
}
NetParameter::NetParameter(const NetParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      layer_param__(from.layer_param__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name_()) {
    name__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name__);
  }
  // @@protoc_insertion_point(copy_constructor:BigBang.NetParameter)
}

void NetParameter::SharedCtor() {
  _cached_size_ = 0;
  name__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NetParameter::~NetParameter() {
  // @@protoc_insertion_point(destructor:BigBang.NetParameter)
  SharedDtor();
}

void NetParameter::SharedDtor() {
  name__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NetParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetParameter::descriptor() {
  ::protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbang_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetParameter& NetParameter::default_instance() {
  ::protobuf_bigbang_2eproto::InitDefaultsNetParameter();
  return *internal_default_instance();
}

NetParameter* NetParameter::New(::google::protobuf::Arena* arena) const {
  NetParameter* n = new NetParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:BigBang.NetParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  layer_param__.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name__.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name__.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NetParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BigBang.NetParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name_().data(), static_cast<int>(this->name_().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BigBang.NetParameter.name_");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BigBang.LayerParameter layer_param_ = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_layer_param_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BigBang.NetParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BigBang.NetParameter)
  return false;
#undef DO_
}

void NetParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BigBang.NetParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name_().data(), static_cast<int>(this->name_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BigBang.NetParameter.name_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name_(), output);
  }

  // repeated .BigBang.LayerParameter layer_param_ = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layer_param__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->layer_param_(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BigBang.NetParameter)
}

::google::protobuf::uint8* NetParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BigBang.NetParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name_().data(), static_cast<int>(this->name_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BigBang.NetParameter.name_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name_(), target);
  }

  // repeated .BigBang.LayerParameter layer_param_ = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layer_param__size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->layer_param_(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BigBang.NetParameter)
  return target;
}

size_t NetParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BigBang.NetParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .BigBang.LayerParameter layer_param_ = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->layer_param__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->layer_param_(static_cast<int>(i)));
    }
  }

  // optional string name_ = 1;
  if (has_name_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BigBang.NetParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const NetParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BigBang.NetParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BigBang.NetParameter)
    MergeFrom(*source);
  }
}

void NetParameter::MergeFrom(const NetParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BigBang.NetParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  layer_param__.MergeFrom(from.layer_param__);
  if (from.has_name_()) {
    set_has_name_();
    name__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name__);
  }
}

void NetParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BigBang.NetParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetParameter::CopyFrom(const NetParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BigBang.NetParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetParameter::IsInitialized() const {
  return true;
}

void NetParameter::Swap(NetParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetParameter::InternalSwap(NetParameter* other) {
  using std::swap;
  layer_param__.InternalSwap(&other->layer_param__);
  name__.Swap(&other->name__);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetParameter::GetMetadata() const {
  protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbang_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolverParameter::InitAsDefaultInstance() {
  ::BigBang::_SolverParameter_default_instance_._instance.get_mutable()->net_param__ = const_cast< ::BigBang::NetParameter*>(
      ::BigBang::NetParameter::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolverParameter::kNetParamFieldNumber;
const int SolverParameter::kLrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolverParameter::SolverParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bigbang_2eproto::InitDefaultsSolverParameter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BigBang.SolverParameter)
}
SolverParameter::SolverParameter(const SolverParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_net_param_()) {
    net_param__ = new ::BigBang::NetParameter(*from.net_param__);
  } else {
    net_param__ = NULL;
  }
  lr_ = from.lr_;
  // @@protoc_insertion_point(copy_constructor:BigBang.SolverParameter)
}

void SolverParameter::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&net_param__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lr_) -
      reinterpret_cast<char*>(&net_param__)) + sizeof(lr_));
}

SolverParameter::~SolverParameter() {
  // @@protoc_insertion_point(destructor:BigBang.SolverParameter)
  SharedDtor();
}

void SolverParameter::SharedDtor() {
  if (this != internal_default_instance()) delete net_param__;
}

void SolverParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SolverParameter::descriptor() {
  ::protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbang_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolverParameter& SolverParameter::default_instance() {
  ::protobuf_bigbang_2eproto::InitDefaultsSolverParameter();
  return *internal_default_instance();
}

SolverParameter* SolverParameter::New(::google::protobuf::Arena* arena) const {
  SolverParameter* n = new SolverParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SolverParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:BigBang.SolverParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(net_param__ != NULL);
    net_param__->Clear();
  }
  lr_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolverParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BigBang.SolverParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .BigBang.NetParameter net_param_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_net_param_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float lr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_lr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BigBang.SolverParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BigBang.SolverParameter)
  return false;
#undef DO_
}

void SolverParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BigBang.SolverParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .BigBang.NetParameter net_param_ = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->net_param__, output);
  }

  // optional float lr = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->lr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BigBang.SolverParameter)
}

::google::protobuf::uint8* SolverParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BigBang.SolverParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .BigBang.NetParameter net_param_ = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->net_param__, deterministic, target);
  }

  // optional float lr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->lr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BigBang.SolverParameter)
  return target;
}

size_t SolverParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BigBang.SolverParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .BigBang.NetParameter net_param_ = 1;
    if (has_net_param_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->net_param__);
    }

    // optional float lr = 2;
    if (has_lr()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SolverParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BigBang.SolverParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const SolverParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolverParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BigBang.SolverParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BigBang.SolverParameter)
    MergeFrom(*source);
  }
}

void SolverParameter::MergeFrom(const SolverParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BigBang.SolverParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_net_param_()->::BigBang::NetParameter::MergeFrom(from.net_param_());
    }
    if (cached_has_bits & 0x00000002u) {
      lr_ = from.lr_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolverParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BigBang.SolverParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolverParameter::CopyFrom(const SolverParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BigBang.SolverParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolverParameter::IsInitialized() const {
  return true;
}

void SolverParameter::Swap(SolverParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolverParameter::InternalSwap(SolverParameter* other) {
  using std::swap;
  swap(net_param__, other->net_param__);
  swap(lr_, other->lr_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SolverParameter::GetMetadata() const {
  protobuf_bigbang_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbang_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace BigBang

// @@protoc_insertion_point(global_scope)
